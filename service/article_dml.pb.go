// Code generated by protoc-gen-go. DO NOT EDIT.
// source: article_dml.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 文章相关动作类型
type ActionArticleType int32

const (
	ActionArticleType_ARTICLES_SAVE          ActionArticleType = 0
	ActionArticleType_ARTICLE_SAVE           ActionArticleType = 1
	ActionArticleType_ARTICLE_MODIFY         ActionArticleType = 2
	ActionArticleType_ARTICLES_MODIFY        ActionArticleType = 3
	ActionArticleType_ARTICLE_DELETE         ActionArticleType = 4
	ActionArticleType_ARTICLES_DELETE        ActionArticleType = 5
	ActionArticleType_ARTICLE_MODIFY_IMAGE   ActionArticleType = 6
	ActionArticleType_ARTICLE_MODIFY_VIDEO   ActionArticleType = 7
	ActionArticleType_ARTICLE_MODIFY_CONTENT ActionArticleType = 8
	// 点赞相关动作
	ActionArticleType_ARTICLE_LIKE            ActionArticleType = 9
	ActionArticleType_ARTICLE_COMMENT_LIKE    ActionArticleType = 10
	ActionArticleType_ARTICLE_REPLY_LIKE      ActionArticleType = 11
	ActionArticleType_ARTICLE_DISLIKE         ActionArticleType = 12
	ActionArticleType_ARTICLE_COMMENT_DISLIKE ActionArticleType = 13
	ActionArticleType_ARTICLE_REPLY_DISLIKE   ActionArticleType = 14
	// 评论回复相关动作
	ActionArticleType_ARTICLE_COMMENT ActionArticleType = 15
	ActionArticleType_ARTICLE_REPLY   ActionArticleType = 16
	// 分享相关动作
	ActionArticleType_ARTICLE_SHARE ActionArticleType = 18
)

var ActionArticleType_name = map[int32]string{
	0:  "ARTICLES_SAVE",
	1:  "ARTICLE_SAVE",
	2:  "ARTICLE_MODIFY",
	3:  "ARTICLES_MODIFY",
	4:  "ARTICLE_DELETE",
	5:  "ARTICLES_DELETE",
	6:  "ARTICLE_MODIFY_IMAGE",
	7:  "ARTICLE_MODIFY_VIDEO",
	8:  "ARTICLE_MODIFY_CONTENT",
	9:  "ARTICLE_LIKE",
	10: "ARTICLE_COMMENT_LIKE",
	11: "ARTICLE_REPLY_LIKE",
	12: "ARTICLE_DISLIKE",
	13: "ARTICLE_COMMENT_DISLIKE",
	14: "ARTICLE_REPLY_DISLIKE",
	15: "ARTICLE_COMMENT",
	16: "ARTICLE_REPLY",
	18: "ARTICLE_SHARE",
}
var ActionArticleType_value = map[string]int32{
	"ARTICLES_SAVE":           0,
	"ARTICLE_SAVE":            1,
	"ARTICLE_MODIFY":          2,
	"ARTICLES_MODIFY":         3,
	"ARTICLE_DELETE":          4,
	"ARTICLES_DELETE":         5,
	"ARTICLE_MODIFY_IMAGE":    6,
	"ARTICLE_MODIFY_VIDEO":    7,
	"ARTICLE_MODIFY_CONTENT":  8,
	"ARTICLE_LIKE":            9,
	"ARTICLE_COMMENT_LIKE":    10,
	"ARTICLE_REPLY_LIKE":      11,
	"ARTICLE_DISLIKE":         12,
	"ARTICLE_COMMENT_DISLIKE": 13,
	"ARTICLE_REPLY_DISLIKE":   14,
	"ARTICLE_COMMENT":         15,
	"ARTICLE_REPLY":           16,
	"ARTICLE_SHARE":           18,
}

func (x ActionArticleType) String() string {
	return proto.EnumName(ActionArticleType_name, int32(x))
}
func (ActionArticleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{0}
}

// 文章-新增、修改、删除请求体
type DMLArticleRequest struct {
	Action               *ArticleAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Articles             []*Article     `protobuf:"bytes,2,rep,name=articles,proto3" json:"articles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DMLArticleRequest) Reset()         { *m = DMLArticleRequest{} }
func (m *DMLArticleRequest) String() string { return proto.CompactTextString(m) }
func (*DMLArticleRequest) ProtoMessage()    {}
func (*DMLArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{0}
}
func (m *DMLArticleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleRequest.Unmarshal(m, b)
}
func (m *DMLArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleRequest.Marshal(b, m, deterministic)
}
func (dst *DMLArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleRequest.Merge(dst, src)
}
func (m *DMLArticleRequest) XXX_Size() int {
	return xxx_messageInfo_DMLArticleRequest.Size(m)
}
func (m *DMLArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleRequest proto.InternalMessageInfo

func (m *DMLArticleRequest) GetAction() *ArticleAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLArticleRequest) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

// 文章-新增、修改、删除响应体
type DMLArticleReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLArticleReply) Reset()         { *m = DMLArticleReply{} }
func (m *DMLArticleReply) String() string { return proto.CompactTextString(m) }
func (*DMLArticleReply) ProtoMessage()    {}
func (*DMLArticleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{1}
}
func (m *DMLArticleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleReply.Unmarshal(m, b)
}
func (m *DMLArticleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleReply.Marshal(b, m, deterministic)
}
func (dst *DMLArticleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleReply.Merge(dst, src)
}
func (m *DMLArticleReply) XXX_Size() int {
	return xxx_messageInfo_DMLArticleReply.Size(m)
}
func (m *DMLArticleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleReply proto.InternalMessageInfo

func (m *DMLArticleReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 评论、回复、相关请求体
type DMLArticleCommentRequest struct {
	Action               *ArticleAction    `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Comments             []*ArticleComment `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DMLArticleCommentRequest) Reset()         { *m = DMLArticleCommentRequest{} }
func (m *DMLArticleCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DMLArticleCommentRequest) ProtoMessage()    {}
func (*DMLArticleCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{2}
}
func (m *DMLArticleCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleCommentRequest.Unmarshal(m, b)
}
func (m *DMLArticleCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleCommentRequest.Marshal(b, m, deterministic)
}
func (dst *DMLArticleCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleCommentRequest.Merge(dst, src)
}
func (m *DMLArticleCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DMLArticleCommentRequest.Size(m)
}
func (m *DMLArticleCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleCommentRequest proto.InternalMessageInfo

func (m *DMLArticleCommentRequest) GetAction() *ArticleAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLArticleCommentRequest) GetComments() []*ArticleComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

// 评论、回复、相关响应体
type DMLArticleCommentReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLArticleCommentReply) Reset()         { *m = DMLArticleCommentReply{} }
func (m *DMLArticleCommentReply) String() string { return proto.CompactTextString(m) }
func (*DMLArticleCommentReply) ProtoMessage()    {}
func (*DMLArticleCommentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{3}
}
func (m *DMLArticleCommentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleCommentReply.Unmarshal(m, b)
}
func (m *DMLArticleCommentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleCommentReply.Marshal(b, m, deterministic)
}
func (dst *DMLArticleCommentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleCommentReply.Merge(dst, src)
}
func (m *DMLArticleCommentReply) XXX_Size() int {
	return xxx_messageInfo_DMLArticleCommentReply.Size(m)
}
func (m *DMLArticleCommentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleCommentReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleCommentReply proto.InternalMessageInfo

func (m *DMLArticleCommentReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 点赞请求体
type DMLArticleLikeRequest struct {
	Action               *ArticleAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Likes                []*ArticleLike `protobuf:"bytes,2,rep,name=likes,proto3" json:"likes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DMLArticleLikeRequest) Reset()         { *m = DMLArticleLikeRequest{} }
func (m *DMLArticleLikeRequest) String() string { return proto.CompactTextString(m) }
func (*DMLArticleLikeRequest) ProtoMessage()    {}
func (*DMLArticleLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{4}
}
func (m *DMLArticleLikeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleLikeRequest.Unmarshal(m, b)
}
func (m *DMLArticleLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleLikeRequest.Marshal(b, m, deterministic)
}
func (dst *DMLArticleLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleLikeRequest.Merge(dst, src)
}
func (m *DMLArticleLikeRequest) XXX_Size() int {
	return xxx_messageInfo_DMLArticleLikeRequest.Size(m)
}
func (m *DMLArticleLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleLikeRequest proto.InternalMessageInfo

func (m *DMLArticleLikeRequest) GetAction() *ArticleAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLArticleLikeRequest) GetLikes() []*ArticleLike {
	if m != nil {
		return m.Likes
	}
	return nil
}

// 点赞响应体
type DMLArticleLikeReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLArticleLikeReply) Reset()         { *m = DMLArticleLikeReply{} }
func (m *DMLArticleLikeReply) String() string { return proto.CompactTextString(m) }
func (*DMLArticleLikeReply) ProtoMessage()    {}
func (*DMLArticleLikeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{5}
}
func (m *DMLArticleLikeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleLikeReply.Unmarshal(m, b)
}
func (m *DMLArticleLikeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleLikeReply.Marshal(b, m, deterministic)
}
func (dst *DMLArticleLikeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleLikeReply.Merge(dst, src)
}
func (m *DMLArticleLikeReply) XXX_Size() int {
	return xxx_messageInfo_DMLArticleLikeReply.Size(m)
}
func (m *DMLArticleLikeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleLikeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleLikeReply proto.InternalMessageInfo

func (m *DMLArticleLikeReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 分享请求体
type DMLArticleShareRequest struct {
	Action               *ArticleAction  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Shares               []*ArticleShare `protobuf:"bytes,2,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DMLArticleShareRequest) Reset()         { *m = DMLArticleShareRequest{} }
func (m *DMLArticleShareRequest) String() string { return proto.CompactTextString(m) }
func (*DMLArticleShareRequest) ProtoMessage()    {}
func (*DMLArticleShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{6}
}
func (m *DMLArticleShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleShareRequest.Unmarshal(m, b)
}
func (m *DMLArticleShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleShareRequest.Marshal(b, m, deterministic)
}
func (dst *DMLArticleShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleShareRequest.Merge(dst, src)
}
func (m *DMLArticleShareRequest) XXX_Size() int {
	return xxx_messageInfo_DMLArticleShareRequest.Size(m)
}
func (m *DMLArticleShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleShareRequest proto.InternalMessageInfo

func (m *DMLArticleShareRequest) GetAction() *ArticleAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLArticleShareRequest) GetShares() []*ArticleShare {
	if m != nil {
		return m.Shares
	}
	return nil
}

// 分享响应体
type DMLArticleShareReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLArticleShareReply) Reset()         { *m = DMLArticleShareReply{} }
func (m *DMLArticleShareReply) String() string { return proto.CompactTextString(m) }
func (*DMLArticleShareReply) ProtoMessage()    {}
func (*DMLArticleShareReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{7}
}
func (m *DMLArticleShareReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLArticleShareReply.Unmarshal(m, b)
}
func (m *DMLArticleShareReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLArticleShareReply.Marshal(b, m, deterministic)
}
func (dst *DMLArticleShareReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLArticleShareReply.Merge(dst, src)
}
func (m *DMLArticleShareReply) XXX_Size() int {
	return xxx_messageInfo_DMLArticleShareReply.Size(m)
}
func (m *DMLArticleShareReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLArticleShareReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLArticleShareReply proto.InternalMessageInfo

func (m *DMLArticleShareReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 动作结构体
type ArticleAction struct {
	ActionValue          ActionArticleType `protobuf:"varint,1,opt,name=ActionValue,proto3,enum=service.ActionArticleType" json:"ActionValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ArticleAction) Reset()         { *m = ArticleAction{} }
func (m *ArticleAction) String() string { return proto.CompactTextString(m) }
func (*ArticleAction) ProtoMessage()    {}
func (*ArticleAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{8}
}
func (m *ArticleAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleAction.Unmarshal(m, b)
}
func (m *ArticleAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleAction.Marshal(b, m, deterministic)
}
func (dst *ArticleAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleAction.Merge(dst, src)
}
func (m *ArticleAction) XXX_Size() int {
	return xxx_messageInfo_ArticleAction.Size(m)
}
func (m *ArticleAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleAction.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleAction proto.InternalMessageInfo

func (m *ArticleAction) GetActionValue() ActionArticleType {
	if m != nil {
		return m.ActionValue
	}
	return ActionArticleType_ARTICLES_SAVE
}

// 点赞结构体
type ArticleLike struct {
	ArticleId            string        `protobuf:"bytes,1,opt,name=articleId,proto3" json:"articleId,omitempty"`
	CommentId            string        `protobuf:"bytes,2,opt,name=commentId,proto3" json:"commentId,omitempty"`
	UserId               string        `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName             string        `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	UserPic              *ArticleImage `protobuf:"bytes,5,opt,name=userPic,proto3" json:"userPic,omitempty"`
	CreatedTime          int64         `protobuf:"zigzag64,6,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ArticleLike) Reset()         { *m = ArticleLike{} }
func (m *ArticleLike) String() string { return proto.CompactTextString(m) }
func (*ArticleLike) ProtoMessage()    {}
func (*ArticleLike) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{9}
}
func (m *ArticleLike) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleLike.Unmarshal(m, b)
}
func (m *ArticleLike) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleLike.Marshal(b, m, deterministic)
}
func (dst *ArticleLike) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleLike.Merge(dst, src)
}
func (m *ArticleLike) XXX_Size() int {
	return xxx_messageInfo_ArticleLike.Size(m)
}
func (m *ArticleLike) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleLike.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleLike proto.InternalMessageInfo

func (m *ArticleLike) GetArticleId() string {
	if m != nil {
		return m.ArticleId
	}
	return ""
}

func (m *ArticleLike) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *ArticleLike) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ArticleLike) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ArticleLike) GetUserPic() *ArticleImage {
	if m != nil {
		return m.UserPic
	}
	return nil
}

func (m *ArticleLike) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

// 分享结构体
type ArticleShare struct {
	ArticleId            string   `protobuf:"bytes,1,opt,name=articleId,proto3" json:"articleId,omitempty"`
	CommentId            string   `protobuf:"bytes,2,opt,name=commentId,proto3" json:"commentId,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ToURL                string   `protobuf:"bytes,4,opt,name=toURL,proto3" json:"toURL,omitempty"`
	CreatedTime          int64    `protobuf:"zigzag64,5,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleShare) Reset()         { *m = ArticleShare{} }
func (m *ArticleShare) String() string { return proto.CompactTextString(m) }
func (*ArticleShare) ProtoMessage()    {}
func (*ArticleShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{10}
}
func (m *ArticleShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleShare.Unmarshal(m, b)
}
func (m *ArticleShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleShare.Marshal(b, m, deterministic)
}
func (dst *ArticleShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleShare.Merge(dst, src)
}
func (m *ArticleShare) XXX_Size() int {
	return xxx_messageInfo_ArticleShare.Size(m)
}
func (m *ArticleShare) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleShare.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleShare proto.InternalMessageInfo

func (m *ArticleShare) GetArticleId() string {
	if m != nil {
		return m.ArticleId
	}
	return ""
}

func (m *ArticleShare) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *ArticleShare) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ArticleShare) GetToURL() string {
	if m != nil {
		return m.ToURL
	}
	return ""
}

func (m *ArticleShare) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

// 文章分页结构体
type ArticlePage struct {
	PageSize             int64    `protobuf:"zigzag64,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Offset               int64    `protobuf:"zigzag64,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Total                int64    `protobuf:"zigzag64,3,opt,name=total,proto3" json:"total,omitempty"`
	TotalPageSize        int64    `protobuf:"zigzag64,4,opt,name=totalPageSize,proto3" json:"totalPageSize,omitempty"`
	IsTop                bool     `protobuf:"varint,5,opt,name=isTop,proto3" json:"isTop,omitempty"`
	IsBottom             bool     `protobuf:"varint,6,opt,name=isBottom,proto3" json:"isBottom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticlePage) Reset()         { *m = ArticlePage{} }
func (m *ArticlePage) String() string { return proto.CompactTextString(m) }
func (*ArticlePage) ProtoMessage()    {}
func (*ArticlePage) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{11}
}
func (m *ArticlePage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticlePage.Unmarshal(m, b)
}
func (m *ArticlePage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticlePage.Marshal(b, m, deterministic)
}
func (dst *ArticlePage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticlePage.Merge(dst, src)
}
func (m *ArticlePage) XXX_Size() int {
	return xxx_messageInfo_ArticlePage.Size(m)
}
func (m *ArticlePage) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticlePage.DiscardUnknown(m)
}

var xxx_messageInfo_ArticlePage proto.InternalMessageInfo

func (m *ArticlePage) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ArticlePage) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ArticlePage) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ArticlePage) GetTotalPageSize() int64 {
	if m != nil {
		return m.TotalPageSize
	}
	return 0
}

func (m *ArticlePage) GetIsTop() bool {
	if m != nil {
		return m.IsTop
	}
	return false
}

func (m *ArticlePage) GetIsBottom() bool {
	if m != nil {
		return m.IsBottom
	}
	return false
}

// 文章结构体
type Article struct {
	ArticleID            string          `protobuf:"bytes,1,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	CreatedTime          int64           `protobuf:"zigzag64,2,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	UpdateTime           int64           `protobuf:"zigzag64,3,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	ArticleTitle         string          `protobuf:"bytes,4,opt,name=ArticleTitle,proto3" json:"ArticleTitle,omitempty"`
	Status               int64           `protobuf:"zigzag64,5,opt,name=Status,proto3" json:"Status,omitempty"`
	Content              string          `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	HasUpChain           bool            `protobuf:"varint,13,opt,name=HasUpChain,proto3" json:"HasUpChain,omitempty"`
	MoneyReward          float64         `protobuf:"fixed64,14,opt,name=MoneyReward,proto3" json:"MoneyReward,omitempty"`
	MoneyRewardStatus    int64           `protobuf:"zigzag64,15,opt,name=MoneyRewardStatus,proto3" json:"MoneyRewardStatus,omitempty"`
	UserID               string          `protobuf:"bytes,16,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserPortrait         *ArticleImage   `protobuf:"bytes,17,opt,name=UserPortrait,proto3" json:"UserPortrait,omitempty"`
	UserName             string          `protobuf:"bytes,18,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CoverMap             *ArticleImage   `protobuf:"bytes,19,opt,name=CoverMap,proto3" json:"CoverMap,omitempty"`
	ArticleTypes         []*ArticleType  `protobuf:"bytes,20,rep,name=ArticleTypes,proto3" json:"ArticleTypes,omitempty"`
	ArticleText          string          `protobuf:"bytes,21,opt,name=ArticleText,proto3" json:"ArticleText,omitempty"`
	Images               []*ArticleImage `protobuf:"bytes,22,rep,name=Images,proto3" json:"Images,omitempty"`
	Videos               []*ArticleVideo `protobuf:"bytes,23,rep,name=Videos,proto3" json:"Videos,omitempty"`
	Labels               []*ArticleLabel `protobuf:"bytes,24,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{12}
}
func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (dst *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(dst, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetArticleID() string {
	if m != nil {
		return m.ArticleID
	}
	return ""
}

func (m *Article) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Article) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *Article) GetArticleTitle() string {
	if m != nil {
		return m.ArticleTitle
	}
	return ""
}

func (m *Article) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Article) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Article) GetHasUpChain() bool {
	if m != nil {
		return m.HasUpChain
	}
	return false
}

func (m *Article) GetMoneyReward() float64 {
	if m != nil {
		return m.MoneyReward
	}
	return 0
}

func (m *Article) GetMoneyRewardStatus() int64 {
	if m != nil {
		return m.MoneyRewardStatus
	}
	return 0
}

func (m *Article) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Article) GetUserPortrait() *ArticleImage {
	if m != nil {
		return m.UserPortrait
	}
	return nil
}

func (m *Article) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Article) GetCoverMap() *ArticleImage {
	if m != nil {
		return m.CoverMap
	}
	return nil
}

func (m *Article) GetArticleTypes() []*ArticleType {
	if m != nil {
		return m.ArticleTypes
	}
	return nil
}

func (m *Article) GetArticleText() string {
	if m != nil {
		return m.ArticleText
	}
	return ""
}

func (m *Article) GetImages() []*ArticleImage {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Article) GetVideos() []*ArticleVideo {
	if m != nil {
		return m.Videos
	}
	return nil
}

func (m *Article) GetLabels() []*ArticleLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

// 文章类型结构体
type ArticleType struct {
	ArticleTypeID           string   `protobuf:"bytes,1,opt,name=ArticleTypeID,proto3" json:"ArticleTypeID,omitempty"`
	ParentID                string   `protobuf:"bytes,2,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	ArticleTypeStatus       int64    `protobuf:"zigzag64,3,opt,name=ArticleTypeStatus,proto3" json:"ArticleTypeStatus,omitempty"`
	ArticleTypeOnlineStatus int64    `protobuf:"zigzag64,4,opt,name=ArticleTypeOnlineStatus,proto3" json:"ArticleTypeOnlineStatus,omitempty"`
	ArticleTypeName         []byte   `protobuf:"bytes,5,opt,name=ArticleTypeName,proto3" json:"ArticleTypeName,omitempty"`
	CreateTime              int64    `protobuf:"zigzag64,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime              int64    `protobuf:"zigzag64,7,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Sequence                int64    `protobuf:"zigzag64,8,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ArticleType) Reset()         { *m = ArticleType{} }
func (m *ArticleType) String() string { return proto.CompactTextString(m) }
func (*ArticleType) ProtoMessage()    {}
func (*ArticleType) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{13}
}
func (m *ArticleType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleType.Unmarshal(m, b)
}
func (m *ArticleType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleType.Marshal(b, m, deterministic)
}
func (dst *ArticleType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleType.Merge(dst, src)
}
func (m *ArticleType) XXX_Size() int {
	return xxx_messageInfo_ArticleType.Size(m)
}
func (m *ArticleType) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleType.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleType proto.InternalMessageInfo

func (m *ArticleType) GetArticleTypeID() string {
	if m != nil {
		return m.ArticleTypeID
	}
	return ""
}

func (m *ArticleType) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

func (m *ArticleType) GetArticleTypeStatus() int64 {
	if m != nil {
		return m.ArticleTypeStatus
	}
	return 0
}

func (m *ArticleType) GetArticleTypeOnlineStatus() int64 {
	if m != nil {
		return m.ArticleTypeOnlineStatus
	}
	return 0
}

func (m *ArticleType) GetArticleTypeName() []byte {
	if m != nil {
		return m.ArticleTypeName
	}
	return nil
}

func (m *ArticleType) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ArticleType) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *ArticleType) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

// 文章标签结构体
type ArticleLabel struct {
	LabelID              string   `protobuf:"bytes,1,opt,name=LabelID,proto3" json:"LabelID,omitempty"`
	LabelContent         string   `protobuf:"bytes,2,opt,name=LabelContent,proto3" json:"LabelContent,omitempty"`
	CreateTime           int64    `protobuf:"zigzag64,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           int64    `protobuf:"zigzag64,4,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleLabel) Reset()         { *m = ArticleLabel{} }
func (m *ArticleLabel) String() string { return proto.CompactTextString(m) }
func (*ArticleLabel) ProtoMessage()    {}
func (*ArticleLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{14}
}
func (m *ArticleLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleLabel.Unmarshal(m, b)
}
func (m *ArticleLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleLabel.Marshal(b, m, deterministic)
}
func (dst *ArticleLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleLabel.Merge(dst, src)
}
func (m *ArticleLabel) XXX_Size() int {
	return xxx_messageInfo_ArticleLabel.Size(m)
}
func (m *ArticleLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleLabel.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleLabel proto.InternalMessageInfo

func (m *ArticleLabel) GetLabelID() string {
	if m != nil {
		return m.LabelID
	}
	return ""
}

func (m *ArticleLabel) GetLabelContent() string {
	if m != nil {
		return m.LabelContent
	}
	return ""
}

func (m *ArticleLabel) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ArticleLabel) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// 文章图片结构体
type ArticleImage struct {
	ImageID              string   `protobuf:"bytes,1,opt,name=ImageID,proto3" json:"ImageID,omitempty"`
	ImageName            string   `protobuf:"bytes,2,opt,name=ImageName,proto3" json:"ImageName,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ImageState           int64    `protobuf:"zigzag64,4,opt,name=ImageState,proto3" json:"ImageState,omitempty"`
	ArticleID            string   `protobuf:"bytes,5,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	Ratio                float64  `protobuf:"fixed64,6,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	ImageType            string   `protobuf:"bytes,7,opt,name=ImageType,proto3" json:"ImageType,omitempty"`
	ImageUrl             string   `protobuf:"bytes,8,opt,name=ImageUrl,proto3" json:"ImageUrl,omitempty"`
	ImageBase64          string   `protobuf:"bytes,9,opt,name=ImageBase64,proto3" json:"ImageBase64,omitempty"`
	Cause                string   `protobuf:"bytes,10,opt,name=cause,proto3" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleImage) Reset()         { *m = ArticleImage{} }
func (m *ArticleImage) String() string { return proto.CompactTextString(m) }
func (*ArticleImage) ProtoMessage()    {}
func (*ArticleImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{15}
}
func (m *ArticleImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleImage.Unmarshal(m, b)
}
func (m *ArticleImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleImage.Marshal(b, m, deterministic)
}
func (dst *ArticleImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleImage.Merge(dst, src)
}
func (m *ArticleImage) XXX_Size() int {
	return xxx_messageInfo_ArticleImage.Size(m)
}
func (m *ArticleImage) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleImage.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleImage proto.InternalMessageInfo

func (m *ArticleImage) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *ArticleImage) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *ArticleImage) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ArticleImage) GetImageState() int64 {
	if m != nil {
		return m.ImageState
	}
	return 0
}

func (m *ArticleImage) GetArticleID() string {
	if m != nil {
		return m.ArticleID
	}
	return ""
}

func (m *ArticleImage) GetRatio() float64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

func (m *ArticleImage) GetImageType() string {
	if m != nil {
		return m.ImageType
	}
	return ""
}

func (m *ArticleImage) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *ArticleImage) GetImageBase64() string {
	if m != nil {
		return m.ImageBase64
	}
	return ""
}

func (m *ArticleImage) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

// 文章视频结构体
type ArticleVideo struct {
	VideoID              string   `protobuf:"bytes,1,opt,name=VideoID,proto3" json:"VideoID,omitempty"`
	VideoName            string   `protobuf:"bytes,2,opt,name=VideoName,proto3" json:"VideoName,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	VideoState           int64    `protobuf:"zigzag64,4,opt,name=VideoState,proto3" json:"VideoState,omitempty"`
	ArticleID            string   `protobuf:"bytes,5,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	Ratio                float64  `protobuf:"fixed64,6,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	VideoUrl             string   `protobuf:"bytes,7,opt,name=VideoUrl,proto3" json:"VideoUrl,omitempty"`
	VideoBase64          string   `protobuf:"bytes,8,opt,name=VideoBase64,proto3" json:"VideoBase64,omitempty"`
	VideoType            string   `protobuf:"bytes,9,opt,name=VideoType,proto3" json:"VideoType,omitempty"`
	VideoImage           string   `protobuf:"bytes,10,opt,name=VideoImage,proto3" json:"VideoImage,omitempty"`
	VideoImageType       string   `protobuf:"bytes,11,opt,name=VideoImageType,proto3" json:"VideoImageType,omitempty"`
	Cause                string   `protobuf:"bytes,12,opt,name=cause,proto3" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleVideo) Reset()         { *m = ArticleVideo{} }
func (m *ArticleVideo) String() string { return proto.CompactTextString(m) }
func (*ArticleVideo) ProtoMessage()    {}
func (*ArticleVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{16}
}
func (m *ArticleVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleVideo.Unmarshal(m, b)
}
func (m *ArticleVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleVideo.Marshal(b, m, deterministic)
}
func (dst *ArticleVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleVideo.Merge(dst, src)
}
func (m *ArticleVideo) XXX_Size() int {
	return xxx_messageInfo_ArticleVideo.Size(m)
}
func (m *ArticleVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleVideo.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleVideo proto.InternalMessageInfo

func (m *ArticleVideo) GetVideoID() string {
	if m != nil {
		return m.VideoID
	}
	return ""
}

func (m *ArticleVideo) GetVideoName() string {
	if m != nil {
		return m.VideoName
	}
	return ""
}

func (m *ArticleVideo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ArticleVideo) GetVideoState() int64 {
	if m != nil {
		return m.VideoState
	}
	return 0
}

func (m *ArticleVideo) GetArticleID() string {
	if m != nil {
		return m.ArticleID
	}
	return ""
}

func (m *ArticleVideo) GetRatio() float64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

func (m *ArticleVideo) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *ArticleVideo) GetVideoBase64() string {
	if m != nil {
		return m.VideoBase64
	}
	return ""
}

func (m *ArticleVideo) GetVideoType() string {
	if m != nil {
		return m.VideoType
	}
	return ""
}

func (m *ArticleVideo) GetVideoImage() string {
	if m != nil {
		return m.VideoImage
	}
	return ""
}

func (m *ArticleVideo) GetVideoImageType() string {
	if m != nil {
		return m.VideoImageType
	}
	return ""
}

func (m *ArticleVideo) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

// 评论回复相关结构体
type ArticleComment struct {
	CommentID            string   `protobuf:"bytes,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	ArticleID            string   `protobuf:"bytes,2,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	CreateTime           int64    `protobuf:"varint,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpDateTime           int64    `protobuf:"varint,4,opt,name=UpDateTime,proto3" json:"UpDateTime,omitempty"`
	Visible              bool     `protobuf:"varint,7,opt,name=Visible,proto3" json:"Visible,omitempty"`
	UserID               string   `protobuf:"bytes,8,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Content              string   `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleComment) Reset()         { *m = ArticleComment{} }
func (m *ArticleComment) String() string { return proto.CompactTextString(m) }
func (*ArticleComment) ProtoMessage()    {}
func (*ArticleComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_article_dml_44adaa338e04d2d3, []int{17}
}
func (m *ArticleComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleComment.Unmarshal(m, b)
}
func (m *ArticleComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleComment.Marshal(b, m, deterministic)
}
func (dst *ArticleComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleComment.Merge(dst, src)
}
func (m *ArticleComment) XXX_Size() int {
	return xxx_messageInfo_ArticleComment.Size(m)
}
func (m *ArticleComment) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleComment.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleComment proto.InternalMessageInfo

func (m *ArticleComment) GetCommentID() string {
	if m != nil {
		return m.CommentID
	}
	return ""
}

func (m *ArticleComment) GetArticleID() string {
	if m != nil {
		return m.ArticleID
	}
	return ""
}

func (m *ArticleComment) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ArticleComment) GetUpDateTime() int64 {
	if m != nil {
		return m.UpDateTime
	}
	return 0
}

func (m *ArticleComment) GetVisible() bool {
	if m != nil {
		return m.Visible
	}
	return false
}

func (m *ArticleComment) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ArticleComment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*DMLArticleRequest)(nil), "service.DMLArticleRequest")
	proto.RegisterType((*DMLArticleReply)(nil), "service.DMLArticleReply")
	proto.RegisterType((*DMLArticleCommentRequest)(nil), "service.DMLArticleCommentRequest")
	proto.RegisterType((*DMLArticleCommentReply)(nil), "service.DMLArticleCommentReply")
	proto.RegisterType((*DMLArticleLikeRequest)(nil), "service.DMLArticleLikeRequest")
	proto.RegisterType((*DMLArticleLikeReply)(nil), "service.DMLArticleLikeReply")
	proto.RegisterType((*DMLArticleShareRequest)(nil), "service.DMLArticleShareRequest")
	proto.RegisterType((*DMLArticleShareReply)(nil), "service.DMLArticleShareReply")
	proto.RegisterType((*ArticleAction)(nil), "service.ArticleAction")
	proto.RegisterType((*ArticleLike)(nil), "service.ArticleLike")
	proto.RegisterType((*ArticleShare)(nil), "service.ArticleShare")
	proto.RegisterType((*ArticlePage)(nil), "service.ArticlePage")
	proto.RegisterType((*Article)(nil), "service.Article")
	proto.RegisterType((*ArticleType)(nil), "service.ArticleType")
	proto.RegisterType((*ArticleLabel)(nil), "service.ArticleLabel")
	proto.RegisterType((*ArticleImage)(nil), "service.ArticleImage")
	proto.RegisterType((*ArticleVideo)(nil), "service.ArticleVideo")
	proto.RegisterType((*ArticleComment)(nil), "service.ArticleComment")
	proto.RegisterEnum("service.ActionArticleType", ActionArticleType_name, ActionArticleType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArticleServiceClient is the client API for ArticleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArticleServiceClient interface {
	DMLArticle(ctx context.Context, in *DMLArticleRequest, opts ...grpc.CallOption) (*DMLArticleReply, error)
	DMLComment(ctx context.Context, in *DMLArticleCommentRequest, opts ...grpc.CallOption) (*DMLArticleCommentReply, error)
	DMLLike(ctx context.Context, in *DMLArticleLikeRequest, opts ...grpc.CallOption) (*DMLArticleLikeReply, error)
	DMLShare(ctx context.Context, in *DMLArticleShareRequest, opts ...grpc.CallOption) (*DMLArticleShareReply, error)
}

type articleServiceClient struct {
	cc *grpc.ClientConn
}

func NewArticleServiceClient(cc *grpc.ClientConn) ArticleServiceClient {
	return &articleServiceClient{cc}
}

func (c *articleServiceClient) DMLArticle(ctx context.Context, in *DMLArticleRequest, opts ...grpc.CallOption) (*DMLArticleReply, error) {
	out := new(DMLArticleReply)
	err := c.cc.Invoke(ctx, "/service.ArticleService/DMLArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) DMLComment(ctx context.Context, in *DMLArticleCommentRequest, opts ...grpc.CallOption) (*DMLArticleCommentReply, error) {
	out := new(DMLArticleCommentReply)
	err := c.cc.Invoke(ctx, "/service.ArticleService/DMLComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) DMLLike(ctx context.Context, in *DMLArticleLikeRequest, opts ...grpc.CallOption) (*DMLArticleLikeReply, error) {
	out := new(DMLArticleLikeReply)
	err := c.cc.Invoke(ctx, "/service.ArticleService/DMLLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) DMLShare(ctx context.Context, in *DMLArticleShareRequest, opts ...grpc.CallOption) (*DMLArticleShareReply, error) {
	out := new(DMLArticleShareReply)
	err := c.cc.Invoke(ctx, "/service.ArticleService/DMLShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArticleServiceServer is the server API for ArticleService service.
type ArticleServiceServer interface {
	DMLArticle(context.Context, *DMLArticleRequest) (*DMLArticleReply, error)
	DMLComment(context.Context, *DMLArticleCommentRequest) (*DMLArticleCommentReply, error)
	DMLLike(context.Context, *DMLArticleLikeRequest) (*DMLArticleLikeReply, error)
	DMLShare(context.Context, *DMLArticleShareRequest) (*DMLArticleShareReply, error)
}

func RegisterArticleServiceServer(s *grpc.Server, srv ArticleServiceServer) {
	s.RegisterService(&_ArticleService_serviceDesc, srv)
}

func _ArticleService_DMLArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLArticleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServiceServer).DMLArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ArticleService/DMLArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServiceServer).DMLArticle(ctx, req.(*DMLArticleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleService_DMLComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLArticleCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServiceServer).DMLComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ArticleService/DMLComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServiceServer).DMLComment(ctx, req.(*DMLArticleCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleService_DMLLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLArticleLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServiceServer).DMLLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ArticleService/DMLLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServiceServer).DMLLike(ctx, req.(*DMLArticleLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleService_DMLShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLArticleShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServiceServer).DMLShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ArticleService/DMLShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServiceServer).DMLShare(ctx, req.(*DMLArticleShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArticleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.ArticleService",
	HandlerType: (*ArticleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DMLArticle",
			Handler:    _ArticleService_DMLArticle_Handler,
		},
		{
			MethodName: "DMLComment",
			Handler:    _ArticleService_DMLComment_Handler,
		},
		{
			MethodName: "DMLLike",
			Handler:    _ArticleService_DMLLike_Handler,
		},
		{
			MethodName: "DMLShare",
			Handler:    _ArticleService_DMLShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "article_dml.proto",
}

func init() { proto.RegisterFile("article_dml.proto", fileDescriptor_article_dml_44adaa338e04d2d3) }

var fileDescriptor_article_dml_44adaa338e04d2d3 = []byte{
	// 1358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdf, 0x6e, 0x1b, 0xc5,
	0x17, 0xae, 0xed, 0x38, 0x5e, 0x1f, 0xe7, 0xcf, 0x66, 0x9a, 0x3f, 0xf3, 0xf3, 0xaf, 0x94, 0xb0,
	0x42, 0x28, 0x2a, 0x25, 0x85, 0x14, 0xa1, 0x22, 0x71, 0x93, 0xda, 0x86, 0x5a, 0xd8, 0x49, 0x34,
	0x76, 0x22, 0xf5, 0x2a, 0xda, 0xda, 0xd3, 0x74, 0xd5, 0xb5, 0xd7, 0xf5, 0x6e, 0x5a, 0xcc, 0x0d,
	0x2f, 0xc0, 0x13, 0x70, 0x8d, 0xb8, 0xe5, 0x1e, 0x89, 0x2b, 0x5e, 0x80, 0x4b, 0x1e, 0x82, 0x87,
	0x40, 0x73, 0xe6, 0xcf, 0xce, 0xae, 0x1d, 0x23, 0x45, 0xe2, 0x6e, 0xce, 0x77, 0xbe, 0x99, 0xf9,
	0xe6, 0x9b, 0x73, 0xc6, 0xd9, 0xc0, 0x96, 0x3f, 0x4d, 0x82, 0x41, 0xc8, 0x2f, 0x87, 0xa3, 0xf0,
	0x70, 0x32, 0x8d, 0x92, 0x88, 0x54, 0x62, 0x3e, 0x7d, 0x1b, 0x0c, 0xb8, 0xf7, 0x06, 0xb6, 0x9a,
	0xdd, 0xce, 0xb1, 0x24, 0x30, 0xfe, 0xe6, 0x9a, 0xc7, 0x09, 0x39, 0x84, 0x55, 0x7f, 0x90, 0x04,
	0xd1, 0x98, 0x16, 0xf6, 0x0b, 0x07, 0xb5, 0xa3, 0xdd, 0x43, 0x45, 0x3f, 0x54, 0xc4, 0x63, 0xcc,
	0x32, 0xc5, 0x22, 0x0f, 0xc1, 0x51, 0x5b, 0xc4, 0xb4, 0xb8, 0x5f, 0x3a, 0xa8, 0x1d, 0xb9, 0xf9,
	0x19, 0xcc, 0x30, 0xbc, 0x8f, 0x61, 0xd3, 0xde, 0x72, 0x12, 0xce, 0x08, 0x85, 0xca, 0x88, 0xc7,
	0xb1, 0x7f, 0xc5, 0x71, 0x47, 0xc2, 0x74, 0xe8, 0xfd, 0x00, 0x34, 0x25, 0x37, 0xa2, 0xd1, 0x88,
	0x8f, 0x93, 0xdb, 0xca, 0x7c, 0x0c, 0xce, 0x40, 0xae, 0xa0, 0x65, 0xee, 0xe5, 0x67, 0xe8, 0x1d,
	0x0c, 0xd1, 0x3b, 0x82, 0xdd, 0x05, 0x02, 0x96, 0x8b, 0x8e, 0x61, 0x27, 0x9d, 0xd3, 0x09, 0x5e,
	0xdf, 0xda, 0xd8, 0x07, 0x50, 0x0e, 0x83, 0xd7, 0xc6, 0xd5, 0xed, 0x3c, 0x1d, 0xd7, 0x96, 0x14,
	0xef, 0x11, 0xdc, 0xcd, 0x6f, 0xba, 0x5c, 0xe5, 0x3b, 0xfb, 0x64, 0xbd, 0x57, 0xfe, 0xf4, 0xd6,
	0x32, 0x3f, 0x81, 0xd5, 0x58, 0xcc, 0xd7, 0x3a, 0x77, 0xf2, 0x7c, 0xb9, 0xba, 0x22, 0x79, 0x9f,
	0xc2, 0xf6, 0xdc, 0xc6, 0xcb, 0xa5, 0x76, 0x61, 0x3d, 0xb3, 0x33, 0xf9, 0x0a, 0x6a, 0x72, 0x74,
	0xe1, 0x87, 0xd7, 0x92, 0xbe, 0x71, 0x54, 0x4f, 0xb7, 0xc5, 0x9c, 0x9a, 0xd2, 0x9f, 0x4d, 0x38,
	0xb3, 0xe9, 0xde, 0x9f, 0x05, 0xa8, 0x59, 0x46, 0x91, 0x7b, 0x50, 0x55, 0xd5, 0xd9, 0x1e, 0xe2,
	0x5a, 0x55, 0x96, 0x02, 0x22, 0xab, 0xaa, 0xa1, 0x3d, 0xa4, 0x45, 0x99, 0x35, 0x00, 0xd9, 0x85,
	0xd5, 0xeb, 0x98, 0x4f, 0xdb, 0x43, 0x5a, 0xc2, 0x94, 0x8a, 0x48, 0x1d, 0x1c, 0x31, 0x3a, 0xf1,
	0x47, 0x9c, 0xae, 0x60, 0xc6, 0xc4, 0xe4, 0x11, 0x54, 0xc4, 0xf8, 0x2c, 0x18, 0xd0, 0x32, 0x1a,
	0x3c, 0x67, 0x58, 0x7b, 0xe4, 0x5f, 0x71, 0xa6, 0x59, 0x64, 0x1f, 0x6a, 0x8d, 0x29, 0xf7, 0x13,
	0x3e, 0xec, 0x07, 0x23, 0x4e, 0x57, 0xd1, 0x1d, 0x1b, 0xf2, 0x7e, 0x2a, 0xc0, 0x9a, 0xed, 0xe8,
	0x7f, 0x72, 0xa6, 0x6d, 0x28, 0x27, 0xd1, 0x39, 0xeb, 0xa8, 0x03, 0xc9, 0x20, 0x2f, 0xae, 0x3c,
	0x2f, 0xee, 0xd7, 0xd4, 0xef, 0x33, 0xff, 0x8a, 0x0b, 0x6f, 0x26, 0xfe, 0x15, 0xef, 0x05, 0xdf,
	0xeb, 0x9b, 0x36, 0xb1, 0xd8, 0x3b, 0x7a, 0xf9, 0x32, 0xe6, 0x09, 0xca, 0x22, 0x4c, 0x45, 0x72,
	0xef, 0xc4, 0x0f, 0x51, 0x12, 0x61, 0x32, 0x20, 0x1f, 0xc2, 0x3a, 0x0e, 0xce, 0xf4, 0x72, 0x2b,
	0x98, 0xcd, 0x82, 0x62, 0x6e, 0x10, 0xf7, 0xa3, 0x09, 0x6a, 0x73, 0x98, 0x0c, 0x84, 0x8a, 0x20,
	0x7e, 0x1a, 0x25, 0x49, 0x34, 0x42, 0x47, 0x1d, 0x66, 0x62, 0xef, 0xb7, 0x32, 0x54, 0x94, 0x62,
	0xe1, 0x95, 0xbe, 0x95, 0xa6, 0x76, 0xd2, 0x00, 0xf9, 0xd3, 0x17, 0xe7, 0x4e, 0x4f, 0xee, 0x03,
	0x9c, 0x4f, 0x86, 0x7e, 0xc2, 0x91, 0x20, 0xe5, 0x5b, 0x08, 0xf1, 0xcc, 0xcd, 0xf5, 0x83, 0x24,
	0xd4, 0xd5, 0x92, 0xc1, 0x84, 0x2b, 0xbd, 0xc4, 0x4f, 0xae, 0x63, 0x65, 0xaf, 0x8a, 0x44, 0xcb,
	0x34, 0xa2, 0x71, 0xc2, 0xc7, 0x09, 0x1e, 0xa1, 0xca, 0x74, 0x28, 0x76, 0x7d, 0xe6, 0xc7, 0xe7,
	0x93, 0xc6, 0x2b, 0x3f, 0x18, 0xd3, 0x75, 0x3c, 0x9f, 0x85, 0x08, 0xdd, 0xdd, 0x68, 0xcc, 0x67,
	0x8c, 0xbf, 0xf3, 0xa7, 0x43, 0xba, 0xb1, 0x5f, 0x38, 0x28, 0x30, 0x1b, 0x22, 0x0f, 0x61, 0xcb,
	0x0a, 0xd5, 0xf6, 0x9b, 0xb8, 0xfd, 0x7c, 0x42, 0x28, 0x3c, 0x17, 0x55, 0xd2, 0xa4, 0xae, 0xac,
	0x19, 0x19, 0x91, 0x2f, 0x61, 0x4d, 0x8c, 0xce, 0xa2, 0x69, 0x32, 0xf5, 0x83, 0x84, 0x6e, 0x2d,
	0x2b, 0xf8, 0x0c, 0x55, 0x5c, 0xd0, 0xb9, 0x6e, 0x21, 0x22, 0x5b, 0x48, 0xc7, 0xe4, 0x33, 0x70,
	0x1a, 0xd1, 0x5b, 0x3e, 0xed, 0xfa, 0x13, 0x7a, 0x77, 0xd9, 0x92, 0x86, 0x46, 0x9e, 0xa4, 0x3e,
	0xcf, 0x26, 0x3c, 0xa6, 0xdb, 0x8b, 0xdf, 0x54, 0x7c, 0x2e, 0x32, 0x4c, 0xe1, 0x95, 0x8e, 0xf9,
	0x77, 0x09, 0xdd, 0x41, 0x2d, 0x36, 0x24, 0x5e, 0x40, 0xdc, 0x2e, 0xa6, 0xbb, 0x8b, 0x5f, 0x40,
	0x29, 0x46, 0x91, 0x04, 0xfd, 0x22, 0x18, 0xf2, 0x28, 0xa6, 0x7b, 0x8b, 0xe9, 0x98, 0x65, 0x8a,
	0x24, 0xe8, 0xa1, 0xff, 0x82, 0x87, 0x31, 0xa5, 0x8b, 0xe9, 0x1d, 0x91, 0x65, 0x8a, 0xe4, 0xfd,
	0x5e, 0x4c, 0xf5, 0xce, 0x26, 0x5c, 0x34, 0x89, 0x15, 0x9a, 0x22, 0xce, 0x82, 0xc2, 0xed, 0x33,
	0x7f, 0x2a, 0x1e, 0x80, 0xa6, 0x7a, 0x11, 0x4c, 0x2c, 0x4a, 0xc1, 0x22, 0xab, 0x52, 0x90, 0x95,
	0x3c, 0x9f, 0x20, 0x4f, 0x60, 0xcf, 0x02, 0x4f, 0xc7, 0x61, 0x30, 0xd6, 0x73, 0x64, 0x7b, 0xde,
	0x94, 0x26, 0x07, 0xb0, 0x69, 0xa5, 0xf0, 0xe2, 0x45, 0xbd, 0xaf, 0xb1, 0x3c, 0x2c, 0xca, 0x5b,
	0xf6, 0x98, 0xf5, 0x20, 0x5a, 0x48, 0xae, 0xe9, 0x2a, 0x73, 0x4d, 0x57, 0x07, 0xa7, 0x27, 0x7e,
	0xed, 0xc6, 0x03, 0x4e, 0x1d, 0xf9, 0x04, 0xe9, 0xd8, 0xfb, 0x31, 0x7d, 0x4b, 0xd1, 0x58, 0xd1,
	0x65, 0x38, 0x30, 0xd6, 0xe9, 0x50, 0xf4, 0x2e, 0x0e, 0x75, 0x13, 0x4a, 0xe3, 0x32, 0x58, 0x4e,
	0x6a, 0xe9, 0x5f, 0xa4, 0xae, 0xe4, 0xa5, 0x7a, 0x3f, 0x17, 0x8d, 0x1c, 0x2c, 0x1f, 0x21, 0x07,
	0x07, 0xa9, 0x1c, 0x15, 0x8a, 0xa7, 0x0a, 0x87, 0xe8, 0x9c, 0x7a, 0xd6, 0x0d, 0x60, 0xb5, 0x68,
	0x29, 0xd3, 0xa2, 0xf7, 0x01, 0x90, 0x24, 0x2e, 0xc1, 0x08, 0x48, 0x91, 0xec, 0x03, 0x58, 0xce,
	0x3f, 0x80, 0xdb, 0x50, 0x66, 0x7e, 0x12, 0x44, 0x78, 0x09, 0x05, 0x26, 0x03, 0xa3, 0x44, 0x5c,
	0x18, 0xda, 0xaf, 0x95, 0x60, 0x45, 0xd6, 0xc1, 0xc1, 0xe0, 0x7c, 0x1a, 0xa2, 0xfb, 0x55, 0x66,
	0x62, 0xd1, 0x6c, 0x38, 0x7e, 0xea, 0xc7, 0xfc, 0x8b, 0xcf, 0x69, 0x55, 0x36, 0x9b, 0x05, 0x89,
	0x1d, 0x07, 0xfe, 0x75, 0xcc, 0x29, 0xc8, 0x9f, 0x21, 0x0c, 0xbc, 0xbf, 0x53, 0x9b, 0xb0, 0x6d,
	0x84, 0x4d, 0x38, 0x48, 0x6d, 0x52, 0xa1, 0x10, 0x87, 0x43, 0xdb, 0x26, 0x03, 0x2c, 0xb3, 0x09,
	0x49, 0x19, 0x9b, 0x52, 0xe4, 0x56, 0x36, 0xd5, 0xc1, 0xc1, 0x15, 0x84, 0x11, 0xd2, 0x25, 0x13,
	0x0b, 0x23, 0x70, 0xac, 0x8c, 0x90, 0x3e, 0xd9, 0x90, 0x39, 0x07, 0x9a, 0x5c, 0xb5, 0xce, 0x81,
	0x26, 0x6b, 0xbd, 0x68, 0x9d, 0xf2, 0xca, 0x42, 0xc8, 0x47, 0xb0, 0x91, 0x46, 0xb8, 0x44, 0x0d,
	0x39, 0x39, 0x34, 0xb5, 0x7b, 0xcd, 0xb6, 0xfb, 0xaf, 0x02, 0x6c, 0x64, 0xff, 0x2a, 0x16, 0x72,
	0xd4, 0x30, 0xfd, 0xa1, 0x34, 0x40, 0xd6, 0x9e, 0x62, 0xde, 0x9e, 0xf9, 0x26, 0x29, 0xcd, 0x37,
	0x49, 0xd3, 0x6e, 0x92, 0x12, 0xb3, 0x10, 0x79, 0xd9, 0x71, 0xf0, 0x22, 0x94, 0xd5, 0xe6, 0x30,
	0x1d, 0x5a, 0xd7, 0xe9, 0x64, 0xae, 0x93, 0x42, 0x65, 0xa0, 0xba, 0x56, 0x9e, 0x5b, 0x87, 0x0f,
	0x7e, 0x29, 0xc1, 0xd6, 0xdc, 0x5f, 0x90, 0x64, 0x0b, 0xd6, 0x8f, 0x59, 0xbf, 0xdd, 0xe8, 0xb4,
	0x7a, 0x97, 0xbd, 0xe3, 0x8b, 0x96, 0x7b, 0x87, 0xb8, 0xb0, 0xa6, 0x20, 0x89, 0x14, 0x08, 0x81,
	0x0d, 0x8d, 0x74, 0x4f, 0x9b, 0xed, 0xaf, 0x9f, 0xbb, 0x45, 0x72, 0x17, 0x36, 0xcd, 0x44, 0x05,
	0x96, 0x6c, 0x62, 0xb3, 0xd5, 0x69, 0xf5, 0x5b, 0xee, 0x4a, 0x86, 0xa8, 0xc0, 0x32, 0xa1, 0xb0,
	0x9d, 0x5d, 0xf1, 0xb2, 0xdd, 0x3d, 0xfe, 0xa6, 0xe5, 0xae, 0x2e, 0xc8, 0x5c, 0xb4, 0x9b, 0xad,
	0x53, 0xb7, 0x42, 0xea, 0xb0, 0x9b, 0xcb, 0x34, 0x4e, 0x4f, 0xfa, 0xad, 0x93, 0xbe, 0xeb, 0xd8,
	0x9a, 0x3b, 0xed, 0x6f, 0x5b, 0x6e, 0xd5, 0x5e, 0xa7, 0x71, 0xda, 0xed, 0xb6, 0x4e, 0xfa, 0x32,
	0x03, 0x64, 0x17, 0x88, 0xce, 0xb0, 0xd6, 0x59, 0xe7, 0xb9, 0xc4, 0x6b, 0x96, 0xd0, 0xcb, 0x66,
	0xbb, 0x87, 0xe0, 0x1a, 0xf9, 0x3f, 0xec, 0xe5, 0x97, 0xd1, 0xc9, 0x75, 0xf2, 0x3f, 0xd8, 0xc9,
	0xae, 0xa4, 0x53, 0x1b, 0xf6, 0x62, 0x6a, 0x9e, 0xbb, 0x69, 0x99, 0x2d, 0xf9, 0xae, 0x6b, 0x43,
	0xbd, 0x67, 0xc7, 0xac, 0xe5, 0x92, 0xa3, 0x3f, 0x8a, 0xa6, 0x06, 0x7b, 0xf2, 0x07, 0x91, 0x34,
	0x01, 0xd2, 0x6f, 0x0b, 0x92, 0x7e, 0x11, 0xcc, 0x7d, 0xe4, 0xd6, 0xe9, 0xc2, 0xdc, 0x24, 0x9c,
	0x79, 0x77, 0x08, 0xc3, 0x55, 0x74, 0x5d, 0x7f, 0xb0, 0x80, 0x99, 0xfd, 0x14, 0xad, 0xbf, 0xbf,
	0x8c, 0x22, 0xd7, 0x6c, 0x43, 0xa5, 0xd9, 0xed, 0xe0, 0xf7, 0xc6, 0xfd, 0x05, 0x6c, 0xeb, 0x33,
	0xb1, 0x7e, 0xef, 0xc6, 0xbc, 0x5c, 0xaa, 0x03, 0x4e, 0xb3, 0xdb, 0x91, 0x7f, 0xe7, 0x2f, 0xda,
	0xd9, 0xfe, 0x98, 0xab, 0xbf, 0x77, 0x33, 0x01, 0x57, 0x7b, 0xb1, 0x8a, 0xff, 0x12, 0x78, 0xfc,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xa3, 0x0f, 0xb1, 0x27, 0x10, 0x00, 0x00,
}
