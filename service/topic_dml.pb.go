// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topic_dml.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 话题相关动作类型
type ActionTopicType int32

const (
	ActionTopicType_TOPICS_SAVE           ActionTopicType = 0
	ActionTopicType_TOPIC_SAVE            ActionTopicType = 1
	ActionTopicType_TOPIC_MODIFY          ActionTopicType = 2
	ActionTopicType_TOPICS_MODIFY         ActionTopicType = 3
	ActionTopicType_TOPIC_DELETE          ActionTopicType = 4
	ActionTopicType_TOPICS_DELETE         ActionTopicType = 5
	ActionTopicType_ANSWERS_SAVE          ActionTopicType = 6
	ActionTopicType_ANSWER_SAVE           ActionTopicType = 7
	ActionTopicType_ANSWER_MODIFY         ActionTopicType = 8
	ActionTopicType_ANSWERS_MODIFY        ActionTopicType = 9
	ActionTopicType_ANSWER_DELETE         ActionTopicType = 10
	ActionTopicType_ANSWERS_DELETE        ActionTopicType = 11
	ActionTopicType_ANSWER_MODIFY_IMAGE   ActionTopicType = 12
	ActionTopicType_ANSWER_MODIFY_VIDEO   ActionTopicType = 13
	ActionTopicType_ANSWER_MODIFY_CONTENT ActionTopicType = 14
	ActionTopicType_TOPIC_LIKE            ActionTopicType = 15
	ActionTopicType_ANSWER_LIKE           ActionTopicType = 16
	ActionTopicType_TOPIC_COMMENT_LIKE    ActionTopicType = 17
	ActionTopicType_TOPIC_REPLY_LIKE      ActionTopicType = 18
	ActionTopicType_TOPIC_DISLIKE         ActionTopicType = 19
	ActionTopicType_ANSWER_DISLIKE        ActionTopicType = 20
	ActionTopicType_TOPIC_COMMENT_DISLIKE ActionTopicType = 21
	ActionTopicType_TOPIC_REPLY_DISLIKE   ActionTopicType = 22
	ActionTopicType_TOPIC_COMMENT_ANSWER  ActionTopicType = 23
	ActionTopicType_TOPIC_COMMENT_REPLY   ActionTopicType = 24
	ActionTopicType_TOPIC_SHARE           ActionTopicType = 25
	ActionTopicType_ANSWER_SHARE          ActionTopicType = 26
)

var ActionTopicType_name = map[int32]string{
	0:  "TOPICS_SAVE",
	1:  "TOPIC_SAVE",
	2:  "TOPIC_MODIFY",
	3:  "TOPICS_MODIFY",
	4:  "TOPIC_DELETE",
	5:  "TOPICS_DELETE",
	6:  "ANSWERS_SAVE",
	7:  "ANSWER_SAVE",
	8:  "ANSWER_MODIFY",
	9:  "ANSWERS_MODIFY",
	10: "ANSWER_DELETE",
	11: "ANSWERS_DELETE",
	12: "ANSWER_MODIFY_IMAGE",
	13: "ANSWER_MODIFY_VIDEO",
	14: "ANSWER_MODIFY_CONTENT",
	15: "TOPIC_LIKE",
	16: "ANSWER_LIKE",
	17: "TOPIC_COMMENT_LIKE",
	18: "TOPIC_REPLY_LIKE",
	19: "TOPIC_DISLIKE",
	20: "ANSWER_DISLIKE",
	21: "TOPIC_COMMENT_DISLIKE",
	22: "TOPIC_REPLY_DISLIKE",
	23: "TOPIC_COMMENT_ANSWER",
	24: "TOPIC_COMMENT_REPLY",
	25: "TOPIC_SHARE",
	26: "ANSWER_SHARE",
}
var ActionTopicType_value = map[string]int32{
	"TOPICS_SAVE":           0,
	"TOPIC_SAVE":            1,
	"TOPIC_MODIFY":          2,
	"TOPICS_MODIFY":         3,
	"TOPIC_DELETE":          4,
	"TOPICS_DELETE":         5,
	"ANSWERS_SAVE":          6,
	"ANSWER_SAVE":           7,
	"ANSWER_MODIFY":         8,
	"ANSWERS_MODIFY":        9,
	"ANSWER_DELETE":         10,
	"ANSWERS_DELETE":        11,
	"ANSWER_MODIFY_IMAGE":   12,
	"ANSWER_MODIFY_VIDEO":   13,
	"ANSWER_MODIFY_CONTENT": 14,
	"TOPIC_LIKE":            15,
	"ANSWER_LIKE":           16,
	"TOPIC_COMMENT_LIKE":    17,
	"TOPIC_REPLY_LIKE":      18,
	"TOPIC_DISLIKE":         19,
	"ANSWER_DISLIKE":        20,
	"TOPIC_COMMENT_DISLIKE": 21,
	"TOPIC_REPLY_DISLIKE":   22,
	"TOPIC_COMMENT_ANSWER":  23,
	"TOPIC_COMMENT_REPLY":   24,
	"TOPIC_SHARE":           25,
	"ANSWER_SHARE":          26,
}

func (x ActionTopicType) String() string {
	return proto.EnumName(ActionTopicType_name, int32(x))
}
func (ActionTopicType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{0}
}

// 话题-新增、修改、删除请求体
type DMLTopicRequest struct {
	Action               *TopicAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Topics               []*Topic     `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DMLTopicRequest) Reset()         { *m = DMLTopicRequest{} }
func (m *DMLTopicRequest) String() string { return proto.CompactTextString(m) }
func (*DMLTopicRequest) ProtoMessage()    {}
func (*DMLTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{0}
}
func (m *DMLTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicRequest.Unmarshal(m, b)
}
func (m *DMLTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicRequest.Marshal(b, m, deterministic)
}
func (dst *DMLTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicRequest.Merge(dst, src)
}
func (m *DMLTopicRequest) XXX_Size() int {
	return xxx_messageInfo_DMLTopicRequest.Size(m)
}
func (m *DMLTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicRequest proto.InternalMessageInfo

func (m *DMLTopicRequest) GetAction() *TopicAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLTopicRequest) GetTopics() []*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

// 话题-新增、修改、删除响应体
type DMLTopicReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLTopicReply) Reset()         { *m = DMLTopicReply{} }
func (m *DMLTopicReply) String() string { return proto.CompactTextString(m) }
func (*DMLTopicReply) ProtoMessage()    {}
func (*DMLTopicReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{1}
}
func (m *DMLTopicReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicReply.Unmarshal(m, b)
}
func (m *DMLTopicReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicReply.Marshal(b, m, deterministic)
}
func (dst *DMLTopicReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicReply.Merge(dst, src)
}
func (m *DMLTopicReply) XXX_Size() int {
	return xxx_messageInfo_DMLTopicReply.Size(m)
}
func (m *DMLTopicReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicReply proto.InternalMessageInfo

func (m *DMLTopicReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 回答-新增、修改、删除请求体
type DMLTopicAnswerRequest struct {
	Action               *TopicAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Answers              []*Answer    `protobuf:"bytes,2,rep,name=answers,proto3" json:"answers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DMLTopicAnswerRequest) Reset()         { *m = DMLTopicAnswerRequest{} }
func (m *DMLTopicAnswerRequest) String() string { return proto.CompactTextString(m) }
func (*DMLTopicAnswerRequest) ProtoMessage()    {}
func (*DMLTopicAnswerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{2}
}
func (m *DMLTopicAnswerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicAnswerRequest.Unmarshal(m, b)
}
func (m *DMLTopicAnswerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicAnswerRequest.Marshal(b, m, deterministic)
}
func (dst *DMLTopicAnswerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicAnswerRequest.Merge(dst, src)
}
func (m *DMLTopicAnswerRequest) XXX_Size() int {
	return xxx_messageInfo_DMLTopicAnswerRequest.Size(m)
}
func (m *DMLTopicAnswerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicAnswerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicAnswerRequest proto.InternalMessageInfo

func (m *DMLTopicAnswerRequest) GetAction() *TopicAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLTopicAnswerRequest) GetAnswers() []*Answer {
	if m != nil {
		return m.Answers
	}
	return nil
}

// 回答-新增、修改、删除响应体
type DMLTopicAnswerReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLTopicAnswerReply) Reset()         { *m = DMLTopicAnswerReply{} }
func (m *DMLTopicAnswerReply) String() string { return proto.CompactTextString(m) }
func (*DMLTopicAnswerReply) ProtoMessage()    {}
func (*DMLTopicAnswerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{3}
}
func (m *DMLTopicAnswerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicAnswerReply.Unmarshal(m, b)
}
func (m *DMLTopicAnswerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicAnswerReply.Marshal(b, m, deterministic)
}
func (dst *DMLTopicAnswerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicAnswerReply.Merge(dst, src)
}
func (m *DMLTopicAnswerReply) XXX_Size() int {
	return xxx_messageInfo_DMLTopicAnswerReply.Size(m)
}
func (m *DMLTopicAnswerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicAnswerReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicAnswerReply proto.InternalMessageInfo

func (m *DMLTopicAnswerReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 评论、回复、相关请求体
type DMLTopicCommentRequest struct {
	Action               *TopicAction    `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Comments             []*TopicComment `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DMLTopicCommentRequest) Reset()         { *m = DMLTopicCommentRequest{} }
func (m *DMLTopicCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DMLTopicCommentRequest) ProtoMessage()    {}
func (*DMLTopicCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{4}
}
func (m *DMLTopicCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicCommentRequest.Unmarshal(m, b)
}
func (m *DMLTopicCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicCommentRequest.Marshal(b, m, deterministic)
}
func (dst *DMLTopicCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicCommentRequest.Merge(dst, src)
}
func (m *DMLTopicCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DMLTopicCommentRequest.Size(m)
}
func (m *DMLTopicCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicCommentRequest proto.InternalMessageInfo

func (m *DMLTopicCommentRequest) GetAction() *TopicAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLTopicCommentRequest) GetComments() []*TopicComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

// 评论、回复、相关响应体
type DMLTopicCommentReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLTopicCommentReply) Reset()         { *m = DMLTopicCommentReply{} }
func (m *DMLTopicCommentReply) String() string { return proto.CompactTextString(m) }
func (*DMLTopicCommentReply) ProtoMessage()    {}
func (*DMLTopicCommentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{5}
}
func (m *DMLTopicCommentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicCommentReply.Unmarshal(m, b)
}
func (m *DMLTopicCommentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicCommentReply.Marshal(b, m, deterministic)
}
func (dst *DMLTopicCommentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicCommentReply.Merge(dst, src)
}
func (m *DMLTopicCommentReply) XXX_Size() int {
	return xxx_messageInfo_DMLTopicCommentReply.Size(m)
}
func (m *DMLTopicCommentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicCommentReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicCommentReply proto.InternalMessageInfo

func (m *DMLTopicCommentReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 点赞请求体
type DMLTopicLikeRequest struct {
	Action               *TopicAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Likes                []*TopicLike `protobuf:"bytes,2,rep,name=likes,proto3" json:"likes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DMLTopicLikeRequest) Reset()         { *m = DMLTopicLikeRequest{} }
func (m *DMLTopicLikeRequest) String() string { return proto.CompactTextString(m) }
func (*DMLTopicLikeRequest) ProtoMessage()    {}
func (*DMLTopicLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{6}
}
func (m *DMLTopicLikeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicLikeRequest.Unmarshal(m, b)
}
func (m *DMLTopicLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicLikeRequest.Marshal(b, m, deterministic)
}
func (dst *DMLTopicLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicLikeRequest.Merge(dst, src)
}
func (m *DMLTopicLikeRequest) XXX_Size() int {
	return xxx_messageInfo_DMLTopicLikeRequest.Size(m)
}
func (m *DMLTopicLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicLikeRequest proto.InternalMessageInfo

func (m *DMLTopicLikeRequest) GetAction() *TopicAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLTopicLikeRequest) GetLikes() []*TopicLike {
	if m != nil {
		return m.Likes
	}
	return nil
}

// 点赞响应体
type DMLTopicLikeReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLTopicLikeReply) Reset()         { *m = DMLTopicLikeReply{} }
func (m *DMLTopicLikeReply) String() string { return proto.CompactTextString(m) }
func (*DMLTopicLikeReply) ProtoMessage()    {}
func (*DMLTopicLikeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{7}
}
func (m *DMLTopicLikeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicLikeReply.Unmarshal(m, b)
}
func (m *DMLTopicLikeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicLikeReply.Marshal(b, m, deterministic)
}
func (dst *DMLTopicLikeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicLikeReply.Merge(dst, src)
}
func (m *DMLTopicLikeReply) XXX_Size() int {
	return xxx_messageInfo_DMLTopicLikeReply.Size(m)
}
func (m *DMLTopicLikeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicLikeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicLikeReply proto.InternalMessageInfo

func (m *DMLTopicLikeReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 分享请求体
type DMLTopicShareRequest struct {
	Action               *TopicAction  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Shares               []*TopicShare `protobuf:"bytes,2,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DMLTopicShareRequest) Reset()         { *m = DMLTopicShareRequest{} }
func (m *DMLTopicShareRequest) String() string { return proto.CompactTextString(m) }
func (*DMLTopicShareRequest) ProtoMessage()    {}
func (*DMLTopicShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{8}
}
func (m *DMLTopicShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicShareRequest.Unmarshal(m, b)
}
func (m *DMLTopicShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicShareRequest.Marshal(b, m, deterministic)
}
func (dst *DMLTopicShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicShareRequest.Merge(dst, src)
}
func (m *DMLTopicShareRequest) XXX_Size() int {
	return xxx_messageInfo_DMLTopicShareRequest.Size(m)
}
func (m *DMLTopicShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicShareRequest proto.InternalMessageInfo

func (m *DMLTopicShareRequest) GetAction() *TopicAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLTopicShareRequest) GetShares() []*TopicShare {
	if m != nil {
		return m.Shares
	}
	return nil
}

// 分享响应体
type DMLTopicShareReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLTopicShareReply) Reset()         { *m = DMLTopicShareReply{} }
func (m *DMLTopicShareReply) String() string { return proto.CompactTextString(m) }
func (*DMLTopicShareReply) ProtoMessage()    {}
func (*DMLTopicShareReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{9}
}
func (m *DMLTopicShareReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLTopicShareReply.Unmarshal(m, b)
}
func (m *DMLTopicShareReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLTopicShareReply.Marshal(b, m, deterministic)
}
func (dst *DMLTopicShareReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLTopicShareReply.Merge(dst, src)
}
func (m *DMLTopicShareReply) XXX_Size() int {
	return xxx_messageInfo_DMLTopicShareReply.Size(m)
}
func (m *DMLTopicShareReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLTopicShareReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLTopicShareReply proto.InternalMessageInfo

func (m *DMLTopicShareReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 动作结构体
type TopicAction struct {
	ActionValue          ActionTopicType `protobuf:"varint,1,opt,name=ActionValue,proto3,enum=service.ActionTopicType" json:"ActionValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TopicAction) Reset()         { *m = TopicAction{} }
func (m *TopicAction) String() string { return proto.CompactTextString(m) }
func (*TopicAction) ProtoMessage()    {}
func (*TopicAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{10}
}
func (m *TopicAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicAction.Unmarshal(m, b)
}
func (m *TopicAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicAction.Marshal(b, m, deterministic)
}
func (dst *TopicAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicAction.Merge(dst, src)
}
func (m *TopicAction) XXX_Size() int {
	return xxx_messageInfo_TopicAction.Size(m)
}
func (m *TopicAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicAction.DiscardUnknown(m)
}

var xxx_messageInfo_TopicAction proto.InternalMessageInfo

func (m *TopicAction) GetActionValue() ActionTopicType {
	if m != nil {
		return m.ActionValue
	}
	return ActionTopicType_TOPICS_SAVE
}

// 点赞结构体
type TopicLike struct {
	TopicId              string   `protobuf:"bytes,1,opt,name=topicId,proto3" json:"topicId,omitempty"`
	AnswerId             string   `protobuf:"bytes,2,opt,name=answerId,proto3" json:"answerId,omitempty"`
	CommentId            string   `protobuf:"bytes,3,opt,name=commentId,proto3" json:"commentId,omitempty"`
	UserId               string   `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	CreatedTime          int64    `protobuf:"zigzag64,7,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicLike) Reset()         { *m = TopicLike{} }
func (m *TopicLike) String() string { return proto.CompactTextString(m) }
func (*TopicLike) ProtoMessage()    {}
func (*TopicLike) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{11}
}
func (m *TopicLike) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicLike.Unmarshal(m, b)
}
func (m *TopicLike) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicLike.Marshal(b, m, deterministic)
}
func (dst *TopicLike) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicLike.Merge(dst, src)
}
func (m *TopicLike) XXX_Size() int {
	return xxx_messageInfo_TopicLike.Size(m)
}
func (m *TopicLike) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicLike.DiscardUnknown(m)
}

var xxx_messageInfo_TopicLike proto.InternalMessageInfo

func (m *TopicLike) GetTopicId() string {
	if m != nil {
		return m.TopicId
	}
	return ""
}

func (m *TopicLike) GetAnswerId() string {
	if m != nil {
		return m.AnswerId
	}
	return ""
}

func (m *TopicLike) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *TopicLike) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TopicLike) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

// 分享结构体
type TopicShare struct {
	TopicId              string   `protobuf:"bytes,1,opt,name=topicId,proto3" json:"topicId,omitempty"`
	AnswerId             string   `protobuf:"bytes,2,opt,name=answerId,proto3" json:"answerId,omitempty"`
	CommentId            string   `protobuf:"bytes,3,opt,name=commentId,proto3" json:"commentId,omitempty"`
	UserId               string   `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	ToURL                string   `protobuf:"bytes,5,opt,name=toURL,proto3" json:"toURL,omitempty"`
	CreatedTime          int64    `protobuf:"zigzag64,6,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicShare) Reset()         { *m = TopicShare{} }
func (m *TopicShare) String() string { return proto.CompactTextString(m) }
func (*TopicShare) ProtoMessage()    {}
func (*TopicShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{12}
}
func (m *TopicShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicShare.Unmarshal(m, b)
}
func (m *TopicShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicShare.Marshal(b, m, deterministic)
}
func (dst *TopicShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicShare.Merge(dst, src)
}
func (m *TopicShare) XXX_Size() int {
	return xxx_messageInfo_TopicShare.Size(m)
}
func (m *TopicShare) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicShare.DiscardUnknown(m)
}

var xxx_messageInfo_TopicShare proto.InternalMessageInfo

func (m *TopicShare) GetTopicId() string {
	if m != nil {
		return m.TopicId
	}
	return ""
}

func (m *TopicShare) GetAnswerId() string {
	if m != nil {
		return m.AnswerId
	}
	return ""
}

func (m *TopicShare) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *TopicShare) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TopicShare) GetToURL() string {
	if m != nil {
		return m.ToURL
	}
	return ""
}

func (m *TopicShare) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

// 话题结构体
type Topic struct {
	TopicID              string        `protobuf:"bytes,1,opt,name=TopicID,proto3" json:"TopicID,omitempty"`
	CreatedTime          int64         `protobuf:"zigzag64,2,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	UpdateTime           int64         `protobuf:"zigzag64,3,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	TopicTitle           string        `protobuf:"bytes,4,opt,name=TopicTitle,proto3" json:"TopicTitle,omitempty"`
	Status               int64         `protobuf:"zigzag64,5,opt,name=Status,proto3" json:"Status,omitempty"`
	Content              string        `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	HasUpChain           bool          `protobuf:"varint,13,opt,name=HasUpChain,proto3" json:"HasUpChain,omitempty"`
	MoneyReward          float64       `protobuf:"fixed64,14,opt,name=MoneyReward,proto3" json:"MoneyReward,omitempty"`
	MoneyRewardStatus    int64         `protobuf:"zigzag64,15,opt,name=MoneyRewardStatus,proto3" json:"MoneyRewardStatus,omitempty"`
	UserID               string        `protobuf:"bytes,16,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName             string        `protobuf:"bytes,18,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CoverMap             *TopicImage   `protobuf:"bytes,19,opt,name=CoverMap,proto3" json:"CoverMap,omitempty"`
	TopicType            int64         `protobuf:"zigzag64,20,opt,name=TopicType,proto3" json:"TopicType,omitempty"`
	TopicJoinStatus      int64         `protobuf:"zigzag64,21,opt,name=TopicJoinStatus,proto3" json:"TopicJoinStatus,omitempty"`
	TopicText            string        `protobuf:"bytes,22,opt,name=TopicText,proto3" json:"TopicText,omitempty"`
	Images               []*TopicImage `protobuf:"bytes,23,rep,name=Images,proto3" json:"Images,omitempty"`
	Videos               []*TopicVideo `protobuf:"bytes,24,rep,name=Videos,proto3" json:"Videos,omitempty"`
	Labels               []*TopicLabel `protobuf:"bytes,25,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{13}
}
func (m *Topic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Topic.Unmarshal(m, b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
}
func (dst *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(dst, src)
}
func (m *Topic) XXX_Size() int {
	return xxx_messageInfo_Topic.Size(m)
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

func (m *Topic) GetTopicID() string {
	if m != nil {
		return m.TopicID
	}
	return ""
}

func (m *Topic) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Topic) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *Topic) GetTopicTitle() string {
	if m != nil {
		return m.TopicTitle
	}
	return ""
}

func (m *Topic) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Topic) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Topic) GetHasUpChain() bool {
	if m != nil {
		return m.HasUpChain
	}
	return false
}

func (m *Topic) GetMoneyReward() float64 {
	if m != nil {
		return m.MoneyReward
	}
	return 0
}

func (m *Topic) GetMoneyRewardStatus() int64 {
	if m != nil {
		return m.MoneyRewardStatus
	}
	return 0
}

func (m *Topic) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Topic) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Topic) GetCoverMap() *TopicImage {
	if m != nil {
		return m.CoverMap
	}
	return nil
}

func (m *Topic) GetTopicType() int64 {
	if m != nil {
		return m.TopicType
	}
	return 0
}

func (m *Topic) GetTopicJoinStatus() int64 {
	if m != nil {
		return m.TopicJoinStatus
	}
	return 0
}

func (m *Topic) GetTopicText() string {
	if m != nil {
		return m.TopicText
	}
	return ""
}

func (m *Topic) GetImages() []*TopicImage {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Topic) GetVideos() []*TopicVideo {
	if m != nil {
		return m.Videos
	}
	return nil
}

func (m *Topic) GetLabels() []*TopicLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

// 回答结构体
type Answer struct {
	AnswerID             string        `protobuf:"bytes,1,opt,name=AnswerID,proto3" json:"AnswerID,omitempty"`
	CreatedTime          int64         `protobuf:"zigzag64,2,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	UpdateTime           int64         `protobuf:"zigzag64,3,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	AnswerTitle          string        `protobuf:"bytes,4,opt,name=AnswerTitle,proto3" json:"AnswerTitle,omitempty"`
	Status               int64         `protobuf:"zigzag64,5,opt,name=Status,proto3" json:"Status,omitempty"`
	Content              string        `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	HasUpChain           bool          `protobuf:"varint,13,opt,name=HasUpChain,proto3" json:"HasUpChain,omitempty"`
	MoneyReward          float64       `protobuf:"fixed64,14,opt,name=MoneyReward,proto3" json:"MoneyReward,omitempty"`
	MoneyRewardStatus    int64         `protobuf:"zigzag64,15,opt,name=MoneyRewardStatus,proto3" json:"MoneyRewardStatus,omitempty"`
	UserID               string        `protobuf:"bytes,16,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoverMap             *TopicImage   `protobuf:"bytes,19,opt,name=CoverMap,proto3" json:"CoverMap,omitempty"`
	TopicID              string        `protobuf:"bytes,20,opt,name=TopicID,proto3" json:"TopicID,omitempty"`
	TopicText            string        `protobuf:"bytes,21,opt,name=TopicText,proto3" json:"TopicText,omitempty"`
	Images               []*TopicImage `protobuf:"bytes,22,rep,name=Images,proto3" json:"Images,omitempty"`
	Videos               []*TopicVideo `protobuf:"bytes,23,rep,name=Videos,proto3" json:"Videos,omitempty"`
	Labels               []*TopicLabel `protobuf:"bytes,24,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Answer) Reset()         { *m = Answer{} }
func (m *Answer) String() string { return proto.CompactTextString(m) }
func (*Answer) ProtoMessage()    {}
func (*Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{14}
}
func (m *Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Answer.Unmarshal(m, b)
}
func (m *Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Answer.Marshal(b, m, deterministic)
}
func (dst *Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Answer.Merge(dst, src)
}
func (m *Answer) XXX_Size() int {
	return xxx_messageInfo_Answer.Size(m)
}
func (m *Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_Answer proto.InternalMessageInfo

func (m *Answer) GetAnswerID() string {
	if m != nil {
		return m.AnswerID
	}
	return ""
}

func (m *Answer) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Answer) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *Answer) GetAnswerTitle() string {
	if m != nil {
		return m.AnswerTitle
	}
	return ""
}

func (m *Answer) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Answer) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Answer) GetHasUpChain() bool {
	if m != nil {
		return m.HasUpChain
	}
	return false
}

func (m *Answer) GetMoneyReward() float64 {
	if m != nil {
		return m.MoneyReward
	}
	return 0
}

func (m *Answer) GetMoneyRewardStatus() int64 {
	if m != nil {
		return m.MoneyRewardStatus
	}
	return 0
}

func (m *Answer) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Answer) GetCoverMap() *TopicImage {
	if m != nil {
		return m.CoverMap
	}
	return nil
}

func (m *Answer) GetTopicID() string {
	if m != nil {
		return m.TopicID
	}
	return ""
}

func (m *Answer) GetTopicText() string {
	if m != nil {
		return m.TopicText
	}
	return ""
}

func (m *Answer) GetImages() []*TopicImage {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Answer) GetVideos() []*TopicVideo {
	if m != nil {
		return m.Videos
	}
	return nil
}

func (m *Answer) GetLabels() []*TopicLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

// topic标签结构体
type TopicLabel struct {
	LabelID              string   `protobuf:"bytes,1,opt,name=LabelID,proto3" json:"LabelID,omitempty"`
	LabelContent         string   `protobuf:"bytes,2,opt,name=LabelContent,proto3" json:"LabelContent,omitempty"`
	CreateTime           int64    `protobuf:"zigzag64,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           int64    `protobuf:"zigzag64,4,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicLabel) Reset()         { *m = TopicLabel{} }
func (m *TopicLabel) String() string { return proto.CompactTextString(m) }
func (*TopicLabel) ProtoMessage()    {}
func (*TopicLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{15}
}
func (m *TopicLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicLabel.Unmarshal(m, b)
}
func (m *TopicLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicLabel.Marshal(b, m, deterministic)
}
func (dst *TopicLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicLabel.Merge(dst, src)
}
func (m *TopicLabel) XXX_Size() int {
	return xxx_messageInfo_TopicLabel.Size(m)
}
func (m *TopicLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicLabel.DiscardUnknown(m)
}

var xxx_messageInfo_TopicLabel proto.InternalMessageInfo

func (m *TopicLabel) GetLabelID() string {
	if m != nil {
		return m.LabelID
	}
	return ""
}

func (m *TopicLabel) GetLabelContent() string {
	if m != nil {
		return m.LabelContent
	}
	return ""
}

func (m *TopicLabel) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *TopicLabel) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// 话题图片结构体
type TopicImage struct {
	ImageID              string   `protobuf:"bytes,1,opt,name=ImageID,proto3" json:"ImageID,omitempty"`
	ImageName            string   `protobuf:"bytes,2,opt,name=ImageName,proto3" json:"ImageName,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ImageState           int64    `protobuf:"zigzag64,4,opt,name=ImageState,proto3" json:"ImageState,omitempty"`
	TopicID              string   `protobuf:"bytes,5,opt,name=TopicID,proto3" json:"TopicID,omitempty"`
	Ratio                float64  `protobuf:"fixed64,6,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	ImageType            string   `protobuf:"bytes,7,opt,name=ImageType,proto3" json:"ImageType,omitempty"`
	ImageUrl             string   `protobuf:"bytes,8,opt,name=ImageUrl,proto3" json:"ImageUrl,omitempty"`
	ImageBase64          string   `protobuf:"bytes,9,opt,name=ImageBase64,proto3" json:"ImageBase64,omitempty"`
	Cause                string   `protobuf:"bytes,10,opt,name=cause,proto3" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicImage) Reset()         { *m = TopicImage{} }
func (m *TopicImage) String() string { return proto.CompactTextString(m) }
func (*TopicImage) ProtoMessage()    {}
func (*TopicImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{16}
}
func (m *TopicImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicImage.Unmarshal(m, b)
}
func (m *TopicImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicImage.Marshal(b, m, deterministic)
}
func (dst *TopicImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicImage.Merge(dst, src)
}
func (m *TopicImage) XXX_Size() int {
	return xxx_messageInfo_TopicImage.Size(m)
}
func (m *TopicImage) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicImage.DiscardUnknown(m)
}

var xxx_messageInfo_TopicImage proto.InternalMessageInfo

func (m *TopicImage) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *TopicImage) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *TopicImage) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *TopicImage) GetImageState() int64 {
	if m != nil {
		return m.ImageState
	}
	return 0
}

func (m *TopicImage) GetTopicID() string {
	if m != nil {
		return m.TopicID
	}
	return ""
}

func (m *TopicImage) GetRatio() float64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

func (m *TopicImage) GetImageType() string {
	if m != nil {
		return m.ImageType
	}
	return ""
}

func (m *TopicImage) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *TopicImage) GetImageBase64() string {
	if m != nil {
		return m.ImageBase64
	}
	return ""
}

func (m *TopicImage) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

// 话题视频结构体
type TopicVideo struct {
	VideoID              string   `protobuf:"bytes,1,opt,name=VideoID,proto3" json:"VideoID,omitempty"`
	VideoName            string   `protobuf:"bytes,2,opt,name=VideoName,proto3" json:"VideoName,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	VideoState           int64    `protobuf:"zigzag64,4,opt,name=VideoState,proto3" json:"VideoState,omitempty"`
	ArticleID            string   `protobuf:"bytes,5,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	Ratio                float64  `protobuf:"fixed64,6,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	VideoUrl             string   `protobuf:"bytes,7,opt,name=VideoUrl,proto3" json:"VideoUrl,omitempty"`
	VideoBase64          string   `protobuf:"bytes,8,opt,name=VideoBase64,proto3" json:"VideoBase64,omitempty"`
	VideoType            string   `protobuf:"bytes,9,opt,name=VideoType,proto3" json:"VideoType,omitempty"`
	VideoImage           string   `protobuf:"bytes,10,opt,name=VideoImage,proto3" json:"VideoImage,omitempty"`
	VideoImageType       string   `protobuf:"bytes,11,opt,name=VideoImageType,proto3" json:"VideoImageType,omitempty"`
	Cause                string   `protobuf:"bytes,12,opt,name=cause,proto3" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicVideo) Reset()         { *m = TopicVideo{} }
func (m *TopicVideo) String() string { return proto.CompactTextString(m) }
func (*TopicVideo) ProtoMessage()    {}
func (*TopicVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{17}
}
func (m *TopicVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicVideo.Unmarshal(m, b)
}
func (m *TopicVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicVideo.Marshal(b, m, deterministic)
}
func (dst *TopicVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicVideo.Merge(dst, src)
}
func (m *TopicVideo) XXX_Size() int {
	return xxx_messageInfo_TopicVideo.Size(m)
}
func (m *TopicVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicVideo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicVideo proto.InternalMessageInfo

func (m *TopicVideo) GetVideoID() string {
	if m != nil {
		return m.VideoID
	}
	return ""
}

func (m *TopicVideo) GetVideoName() string {
	if m != nil {
		return m.VideoName
	}
	return ""
}

func (m *TopicVideo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *TopicVideo) GetVideoState() int64 {
	if m != nil {
		return m.VideoState
	}
	return 0
}

func (m *TopicVideo) GetArticleID() string {
	if m != nil {
		return m.ArticleID
	}
	return ""
}

func (m *TopicVideo) GetRatio() float64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

func (m *TopicVideo) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *TopicVideo) GetVideoBase64() string {
	if m != nil {
		return m.VideoBase64
	}
	return ""
}

func (m *TopicVideo) GetVideoType() string {
	if m != nil {
		return m.VideoType
	}
	return ""
}

func (m *TopicVideo) GetVideoImage() string {
	if m != nil {
		return m.VideoImage
	}
	return ""
}

func (m *TopicVideo) GetVideoImageType() string {
	if m != nil {
		return m.VideoImageType
	}
	return ""
}

func (m *TopicVideo) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

// 评论回复相关结构体
type TopicComment struct {
	CommentID            string   `protobuf:"bytes,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	AnswerID             string   `protobuf:"bytes,2,opt,name=AnswerID,proto3" json:"AnswerID,omitempty"`
	CreateTime           int64    `protobuf:"zigzag64,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpDateTime           int64    `protobuf:"zigzag64,4,opt,name=UpDateTime,proto3" json:"UpDateTime,omitempty"`
	Visible              bool     `protobuf:"varint,7,opt,name=Visible,proto3" json:"Visible,omitempty"`
	UserID               string   `protobuf:"bytes,8,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Content              string   `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicComment) Reset()         { *m = TopicComment{} }
func (m *TopicComment) String() string { return proto.CompactTextString(m) }
func (*TopicComment) ProtoMessage()    {}
func (*TopicComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_topic_dml_e62d00695fb372fa, []int{18}
}
func (m *TopicComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicComment.Unmarshal(m, b)
}
func (m *TopicComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicComment.Marshal(b, m, deterministic)
}
func (dst *TopicComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicComment.Merge(dst, src)
}
func (m *TopicComment) XXX_Size() int {
	return xxx_messageInfo_TopicComment.Size(m)
}
func (m *TopicComment) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicComment.DiscardUnknown(m)
}

var xxx_messageInfo_TopicComment proto.InternalMessageInfo

func (m *TopicComment) GetCommentID() string {
	if m != nil {
		return m.CommentID
	}
	return ""
}

func (m *TopicComment) GetAnswerID() string {
	if m != nil {
		return m.AnswerID
	}
	return ""
}

func (m *TopicComment) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *TopicComment) GetUpDateTime() int64 {
	if m != nil {
		return m.UpDateTime
	}
	return 0
}

func (m *TopicComment) GetVisible() bool {
	if m != nil {
		return m.Visible
	}
	return false
}

func (m *TopicComment) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *TopicComment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*DMLTopicRequest)(nil), "service.DMLTopicRequest")
	proto.RegisterType((*DMLTopicReply)(nil), "service.DMLTopicReply")
	proto.RegisterType((*DMLTopicAnswerRequest)(nil), "service.DMLTopicAnswerRequest")
	proto.RegisterType((*DMLTopicAnswerReply)(nil), "service.DMLTopicAnswerReply")
	proto.RegisterType((*DMLTopicCommentRequest)(nil), "service.DMLTopicCommentRequest")
	proto.RegisterType((*DMLTopicCommentReply)(nil), "service.DMLTopicCommentReply")
	proto.RegisterType((*DMLTopicLikeRequest)(nil), "service.DMLTopicLikeRequest")
	proto.RegisterType((*DMLTopicLikeReply)(nil), "service.DMLTopicLikeReply")
	proto.RegisterType((*DMLTopicShareRequest)(nil), "service.DMLTopicShareRequest")
	proto.RegisterType((*DMLTopicShareReply)(nil), "service.DMLTopicShareReply")
	proto.RegisterType((*TopicAction)(nil), "service.TopicAction")
	proto.RegisterType((*TopicLike)(nil), "service.TopicLike")
	proto.RegisterType((*TopicShare)(nil), "service.TopicShare")
	proto.RegisterType((*Topic)(nil), "service.Topic")
	proto.RegisterType((*Answer)(nil), "service.Answer")
	proto.RegisterType((*TopicLabel)(nil), "service.TopicLabel")
	proto.RegisterType((*TopicImage)(nil), "service.TopicImage")
	proto.RegisterType((*TopicVideo)(nil), "service.TopicVideo")
	proto.RegisterType((*TopicComment)(nil), "service.TopicComment")
	proto.RegisterEnum("service.ActionTopicType", ActionTopicType_name, ActionTopicType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TopicServiceClient is the client API for TopicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopicServiceClient interface {
	DMLTopic(ctx context.Context, in *DMLTopicRequest, opts ...grpc.CallOption) (*DMLTopicReply, error)
	DMLAnswer(ctx context.Context, in *DMLTopicAnswerRequest, opts ...grpc.CallOption) (*DMLTopicAnswerReply, error)
	DMLComment(ctx context.Context, in *DMLTopicCommentRequest, opts ...grpc.CallOption) (*DMLTopicCommentReply, error)
	DMLLike(ctx context.Context, in *DMLTopicLikeRequest, opts ...grpc.CallOption) (*DMLTopicLikeReply, error)
	DMLShare(ctx context.Context, in *DMLTopicShareRequest, opts ...grpc.CallOption) (*DMLTopicShareReply, error)
}

type topicServiceClient struct {
	cc *grpc.ClientConn
}

func NewTopicServiceClient(cc *grpc.ClientConn) TopicServiceClient {
	return &topicServiceClient{cc}
}

func (c *topicServiceClient) DMLTopic(ctx context.Context, in *DMLTopicRequest, opts ...grpc.CallOption) (*DMLTopicReply, error) {
	out := new(DMLTopicReply)
	err := c.cc.Invoke(ctx, "/service.TopicService/DMLTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicServiceClient) DMLAnswer(ctx context.Context, in *DMLTopicAnswerRequest, opts ...grpc.CallOption) (*DMLTopicAnswerReply, error) {
	out := new(DMLTopicAnswerReply)
	err := c.cc.Invoke(ctx, "/service.TopicService/DMLAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicServiceClient) DMLComment(ctx context.Context, in *DMLTopicCommentRequest, opts ...grpc.CallOption) (*DMLTopicCommentReply, error) {
	out := new(DMLTopicCommentReply)
	err := c.cc.Invoke(ctx, "/service.TopicService/DMLComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicServiceClient) DMLLike(ctx context.Context, in *DMLTopicLikeRequest, opts ...grpc.CallOption) (*DMLTopicLikeReply, error) {
	out := new(DMLTopicLikeReply)
	err := c.cc.Invoke(ctx, "/service.TopicService/DMLLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicServiceClient) DMLShare(ctx context.Context, in *DMLTopicShareRequest, opts ...grpc.CallOption) (*DMLTopicShareReply, error) {
	out := new(DMLTopicShareReply)
	err := c.cc.Invoke(ctx, "/service.TopicService/DMLShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopicServiceServer is the server API for TopicService service.
type TopicServiceServer interface {
	DMLTopic(context.Context, *DMLTopicRequest) (*DMLTopicReply, error)
	DMLAnswer(context.Context, *DMLTopicAnswerRequest) (*DMLTopicAnswerReply, error)
	DMLComment(context.Context, *DMLTopicCommentRequest) (*DMLTopicCommentReply, error)
	DMLLike(context.Context, *DMLTopicLikeRequest) (*DMLTopicLikeReply, error)
	DMLShare(context.Context, *DMLTopicShareRequest) (*DMLTopicShareReply, error)
}

func RegisterTopicServiceServer(s *grpc.Server, srv TopicServiceServer) {
	s.RegisterService(&_TopicService_serviceDesc, srv)
}

func _TopicService_DMLTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServiceServer).DMLTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.TopicService/DMLTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServiceServer).DMLTopic(ctx, req.(*DMLTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TopicService_DMLAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLTopicAnswerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServiceServer).DMLAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.TopicService/DMLAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServiceServer).DMLAnswer(ctx, req.(*DMLTopicAnswerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TopicService_DMLComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLTopicCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServiceServer).DMLComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.TopicService/DMLComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServiceServer).DMLComment(ctx, req.(*DMLTopicCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TopicService_DMLLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLTopicLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServiceServer).DMLLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.TopicService/DMLLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServiceServer).DMLLike(ctx, req.(*DMLTopicLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TopicService_DMLShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLTopicShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServiceServer).DMLShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.TopicService/DMLShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServiceServer).DMLShare(ctx, req.(*DMLTopicShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TopicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.TopicService",
	HandlerType: (*TopicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DMLTopic",
			Handler:    _TopicService_DMLTopic_Handler,
		},
		{
			MethodName: "DMLAnswer",
			Handler:    _TopicService_DMLAnswer_Handler,
		},
		{
			MethodName: "DMLComment",
			Handler:    _TopicService_DMLComment_Handler,
		},
		{
			MethodName: "DMLLike",
			Handler:    _TopicService_DMLLike_Handler,
		},
		{
			MethodName: "DMLShare",
			Handler:    _TopicService_DMLShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "topic_dml.proto",
}

func init() { proto.RegisterFile("topic_dml.proto", fileDescriptor_topic_dml_e62d00695fb372fa) }

var fileDescriptor_topic_dml_e62d00695fb372fa = []byte{
	// 1334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xcf, 0x72, 0x1b, 0xc5,
	0x13, 0x8e, 0x64, 0xeb, 0x5f, 0xcb, 0x96, 0xd6, 0x63, 0x59, 0x9e, 0xe8, 0x97, 0x5f, 0x70, 0xed,
	0x21, 0xe5, 0x40, 0x70, 0xc0, 0x50, 0x1c, 0x38, 0x50, 0x25, 0xa4, 0x85, 0x2c, 0x91, 0xe4, 0xd4,
	0x4a, 0x36, 0x95, 0x93, 0x6b, 0x23, 0x4d, 0x25, 0x5b, 0x91, 0xb4, 0x8a, 0x76, 0x9d, 0xe0, 0x57,
	0xe0, 0x0d, 0xb8, 0xf0, 0x0c, 0x14, 0x47, 0x9e, 0x83, 0xa7, 0xe0, 0x05, 0xb8, 0x70, 0xa0, 0xa6,
	0x67, 0x66, 0x67, 0x76, 0x65, 0x19, 0xec, 0xa2, 0xa8, 0xe2, 0x36, 0xfd, 0xf5, 0x37, 0xdd, 0xdf,
	0x74, 0xf7, 0xac, 0x35, 0x86, 0x7a, 0x1c, 0x2e, 0x82, 0xf1, 0xf9, 0x64, 0x36, 0x3d, 0x5a, 0x2c,
	0xc3, 0x38, 0x24, 0xa5, 0x88, 0x2d, 0xdf, 0x06, 0x63, 0x66, 0xbf, 0x84, 0x7a, 0xb7, 0xdf, 0x1b,
	0x71, 0xb7, 0xc7, 0xde, 0x5c, 0xb0, 0x28, 0x26, 0x8f, 0xa0, 0xe8, 0x8f, 0xe3, 0x20, 0x9c, 0xd3,
	0xdc, 0x41, 0xee, 0xb0, 0x7a, 0xdc, 0x38, 0x92, 0xe4, 0x23, 0xa4, 0xb5, 0xd1, 0xe7, 0x49, 0x0e,
	0x79, 0x00, 0x45, 0x0c, 0x1e, 0xd1, 0xfc, 0xc1, 0xc6, 0x61, 0xf5, 0xb8, 0x96, 0x66, 0x7b, 0xd2,
	0x6b, 0x3f, 0x84, 0x6d, 0x9d, 0x68, 0x31, 0xbd, 0x24, 0x14, 0x4a, 0x33, 0x16, 0x45, 0xfe, 0x4b,
	0x86, 0x79, 0x88, 0xa7, 0x4c, 0x7b, 0x01, 0x7b, 0x8a, 0xda, 0x9e, 0x47, 0xef, 0xd8, 0xf2, 0x76,
	0xca, 0x1e, 0x42, 0xc9, 0xc7, 0xed, 0x4a, 0x5a, 0x3d, 0xa1, 0xcb, 0xb0, 0xca, 0x6f, 0x3f, 0x86,
	0xdd, 0x6c, 0xc6, 0xeb, 0x25, 0x5e, 0x42, 0x53, 0x6d, 0xe8, 0x84, 0xb3, 0x19, 0x9b, 0xc7, 0xb7,
	0xd3, 0xf8, 0x31, 0x94, 0xc7, 0x62, 0xbf, 0x12, 0xb9, 0x97, 0xe6, 0xab, 0xe8, 0x09, 0xcd, 0xfe,
	0x08, 0x1a, 0x2b, 0xa9, 0xaf, 0x17, 0x3b, 0xd3, 0xa7, 0xeb, 0x05, 0xaf, 0xd9, 0xed, 0x94, 0x1e,
	0x42, 0x61, 0x1a, 0xbc, 0x66, 0x4a, 0x26, 0x49, 0x93, 0x31, 0xae, 0x20, 0xd8, 0x1f, 0xc2, 0x4e,
	0x3a, 0xdd, 0xf5, 0xea, 0xde, 0xe8, 0xf3, 0x0c, 0x5f, 0xf9, 0xcb, 0x5b, 0xca, 0xfb, 0x00, 0x8a,
	0x11, 0xdf, 0xad, 0xf4, 0xed, 0xa6, 0xd9, 0x22, 0xb2, 0xa4, 0xd8, 0x47, 0x40, 0x32, 0x29, 0xaf,
	0x97, 0xe8, 0x42, 0xd5, 0xc8, 0x49, 0x3e, 0x87, 0xaa, 0x58, 0x9d, 0xf9, 0xd3, 0x0b, 0x41, 0xae,
	0x1d, 0x53, 0x3d, 0x5c, 0xe8, 0xc3, 0x0d, 0xa3, 0xcb, 0x05, 0xf3, 0x4c, 0xb2, 0xfd, 0x43, 0x0e,
	0x2a, 0x49, 0x69, 0x78, 0x4a, 0xbc, 0x1e, 0xee, 0x04, 0xa3, 0x54, 0x3c, 0x65, 0x92, 0x16, 0x94,
	0xc5, 0x70, 0xba, 0x13, 0x9a, 0x47, 0x57, 0x62, 0x93, 0x7b, 0x50, 0x91, 0xd3, 0xe0, 0x4e, 0xe8,
	0x06, 0x3a, 0x35, 0x40, 0x9a, 0x50, 0xbc, 0x88, 0x70, 0xdf, 0x26, 0xba, 0xa4, 0x45, 0x0e, 0xa0,
	0xda, 0x59, 0x32, 0x3f, 0x66, 0x93, 0x51, 0x30, 0x63, 0xb4, 0x84, 0x47, 0x34, 0x21, 0xfb, 0xa7,
	0x1c, 0x80, 0x2e, 0xca, 0xbf, 0x2a, 0xae, 0x01, 0x85, 0x38, 0x3c, 0xf5, 0x7a, 0xb4, 0x80, 0xb0,
	0x30, 0xb2, 0x92, 0x8b, 0xab, 0x92, 0x7f, 0xdf, 0x84, 0x02, 0x4a, 0xe6, 0x6a, 0x71, 0xe1, 0x76,
	0x95, 0x5a, 0x69, 0x66, 0xa3, 0xe4, 0x57, 0xa2, 0x90, 0xfb, 0x00, 0xa7, 0x8b, 0x89, 0x1f, 0x33,
	0x24, 0x6c, 0x20, 0xc1, 0x40, 0xb8, 0x5f, 0xb4, 0x33, 0x88, 0xa7, 0x4c, 0x2a, 0x37, 0x10, 0x7e,
	0xaa, 0x61, 0xec, 0xc7, 0x17, 0x11, 0xca, 0x27, 0x9e, 0xb4, 0xb8, 0xa6, 0x4e, 0x38, 0x8f, 0xd9,
	0x3c, 0x46, 0xed, 0x15, 0x4f, 0x99, 0x3c, 0xe2, 0x13, 0x3f, 0x3a, 0x5d, 0x74, 0x5e, 0xf9, 0xc1,
	0x9c, 0x6e, 0x1f, 0xe4, 0x0e, 0xcb, 0x9e, 0x81, 0x70, 0xcd, 0xfd, 0x70, 0xce, 0x2e, 0x3d, 0xf6,
	0xce, 0x5f, 0x4e, 0x68, 0xed, 0x20, 0x77, 0x98, 0xf3, 0x4c, 0x88, 0x3c, 0x82, 0x1d, 0xc3, 0x94,
	0xe9, 0xeb, 0x98, 0x7e, 0xd5, 0xc1, 0x15, 0x9e, 0xf2, 0x4a, 0x77, 0xa9, 0x25, 0xea, 0x2e, 0x2c,
	0xde, 0x49, 0xbe, 0x1a, 0xf8, 0x33, 0x46, 0x89, 0xe8, 0xa4, 0xb2, 0xc9, 0x63, 0x28, 0x77, 0xc2,
	0xb7, 0x6c, 0xd9, 0xf7, 0x17, 0x74, 0x17, 0xaf, 0x60, 0xe6, 0x52, 0xb9, 0x33, 0xff, 0x25, 0xf3,
	0x12, 0x12, 0x6f, 0x7d, 0x32, 0xf5, 0xb4, 0x81, 0x52, 0x34, 0x40, 0x0e, 0xa1, 0x8e, 0xc6, 0x37,
	0x61, 0x30, 0x97, 0x72, 0xf7, 0x90, 0x93, 0x85, 0x75, 0x1c, 0xf6, 0x5d, 0x4c, 0x9b, 0x62, 0x84,
	0x12, 0x80, 0xdf, 0x74, 0x4c, 0x1c, 0xd1, 0xfd, 0xab, 0x6e, 0xba, 0x10, 0x25, 0x29, 0x9c, 0x7c,
	0x16, 0x4c, 0x58, 0x18, 0x51, 0x7a, 0x15, 0x19, 0x7d, 0x9e, 0xa4, 0x70, 0xf2, 0xd4, 0x7f, 0xc1,
	0xa6, 0x11, 0xbd, 0x7b, 0x15, 0xb9, 0xc7, 0x7d, 0x9e, 0xa4, 0xd8, 0x3f, 0x6f, 0x42, 0x51, 0xfc,
	0xad, 0xe0, 0x45, 0x14, 0xab, 0x64, 0xf6, 0x12, 0xfb, 0x1f, 0x18, 0xbe, 0x03, 0xa8, 0x8a, 0x68,
	0xe6, 0xf4, 0x99, 0xd0, 0x7f, 0x78, 0xfc, 0x6e, 0x3c, 0x62, 0xc6, 0x2d, 0x6f, 0xa4, 0x6f, 0x79,
	0x6a, 0x68, 0xf6, 0xd6, 0x0f, 0x4d, 0xf3, 0x26, 0x43, 0xb3, 0x7f, 0x93, 0xa1, 0xa1, 0x7f, 0x3d,
	0x34, 0xdf, 0xab, 0x2f, 0x2c, 0xc2, 0xfc, 0x34, 0xb8, 0xd0, 0xdf, 0x2c, 0x69, 0x12, 0x1b, 0xb6,
	0x70, 0xa9, 0xfa, 0x27, 0xbe, 0xb2, 0x29, 0x8c, 0x37, 0x51, 0xcc, 0x91, 0x39, 0x38, 0x1a, 0xc9,
	0x0c, 0xd6, 0x66, 0x76, 0xb0, 0xec, 0x1f, 0xf3, 0x52, 0x0c, 0x1e, 0x9b, 0x8b, 0xc1, 0x85, 0x16,
	0x23, 0x4d, 0x5e, 0x5a, 0x5c, 0xe2, 0x57, 0x42, 0x28, 0xd1, 0x80, 0xd1, 0xdb, 0x8d, 0x54, 0x6f,
	0xef, 0x03, 0x20, 0x89, 0x8f, 0x40, 0x92, 0x5e, 0x23, 0x66, 0x2b, 0x0b, 0xe9, 0x56, 0x36, 0xa0,
	0xe0, 0xf9, 0x71, 0x10, 0xe2, 0xd4, 0xe6, 0x3c, 0x61, 0x24, 0x2a, 0xf0, 0xeb, 0x52, 0x32, 0x54,
	0xe0, 0xd7, 0xa5, 0x05, 0x65, 0x34, 0x4e, 0x97, 0x53, 0x5a, 0x16, 0x77, 0x50, 0xd9, 0x7c, 0x9a,
	0x71, 0xfd, 0xa5, 0x1f, 0xb1, 0xcf, 0x3e, 0xa5, 0x15, 0x71, 0x83, 0x0c, 0x88, 0x67, 0x1c, 0xfb,
	0x17, 0x11, 0xa3, 0x20, 0xfe, 0xfc, 0xa0, 0x61, 0xff, 0xa6, 0x0a, 0x84, 0xad, 0xe6, 0x82, 0x71,
	0xa1, 0x0b, 0x24, 0x4d, 0x2e, 0x0d, 0x97, 0x66, 0x81, 0x12, 0xe0, 0xba, 0x02, 0x21, 0x29, 0x55,
	0x20, 0x8d, 0xf0, 0xa8, 0xed, 0x65, 0x1c, 0x8c, 0xa7, 0x2c, 0x29, 0x91, 0x06, 0xd6, 0x14, 0xa9,
	0x05, 0x65, 0x8c, 0xc0, 0xcb, 0x20, 0x6a, 0x94, 0xd8, 0xbc, 0x0c, 0xb8, 0x96, 0x65, 0x10, 0x55,
	0x32, 0xa1, 0xe4, 0x1c, 0x58, 0xe2, 0x8a, 0x71, 0x0e, 0x2c, 0xb1, 0xd2, 0x8b, 0x85, 0x93, 0x95,
	0x32, 0x10, 0xf2, 0x00, 0x6a, 0xda, 0xc2, 0x10, 0x55, 0xe4, 0x64, 0x50, 0x5d, 0xec, 0x2d, 0xb3,
	0xd8, 0xbf, 0xe6, 0x60, 0xcb, 0xfc, 0x51, 0xcb, 0xc5, 0xc8, 0x65, 0x52, 0x70, 0x0d, 0xa4, 0xbe,
	0xb9, 0xf9, 0xcc, 0x37, 0xf7, 0x6f, 0x5d, 0x8c, 0xee, 0xca, 0xc5, 0x50, 0x88, 0x68, 0x74, 0x14,
	0xbc, 0x98, 0x8a, 0x39, 0x2b, 0x7b, 0xca, 0x34, 0x5a, 0x59, 0x4e, 0xb5, 0x92, 0x42, 0x69, 0x2c,
	0x6f, 0xaa, 0x38, 0xb3, 0x32, 0xdf, 0xff, 0x65, 0x13, 0xea, 0x99, 0x1f, 0x84, 0xa4, 0x0e, 0xd5,
	0xd1, 0xc9, 0x33, 0xb7, 0x33, 0x3c, 0x1f, 0xb6, 0xcf, 0x1c, 0xeb, 0x0e, 0xa9, 0x01, 0x20, 0x20,
	0xec, 0x1c, 0xb1, 0x60, 0x4b, 0xd8, 0xfd, 0x93, 0xae, 0xfb, 0xd5, 0x73, 0x2b, 0x4f, 0x76, 0x60,
	0x5b, 0x6e, 0x91, 0xd0, 0x86, 0x26, 0x75, 0x9d, 0x9e, 0x33, 0x72, 0xac, 0x4d, 0x83, 0x24, 0xa1,
	0x02, 0x27, 0xb5, 0x07, 0xc3, 0x6f, 0x1d, 0x4f, 0xe6, 0x2a, 0xf2, 0xe4, 0x02, 0x11, 0x40, 0x89,
	0xef, 0x92, 0x80, 0x0c, 0x5d, 0x26, 0x04, 0x6a, 0x6a, 0x97, 0xc4, 0x2a, 0x06, 0x4d, 0x06, 0x07,
	0x93, 0x26, 0xb1, 0x2a, 0xd9, 0x87, 0xdd, 0x54, 0xb4, 0x73, 0xb7, 0xdf, 0xfe, 0xda, 0xb1, 0xb6,
	0x56, 0x1d, 0x67, 0x6e, 0xd7, 0x39, 0xb1, 0xb6, 0xc9, 0x5d, 0xd8, 0x4b, 0x3b, 0x3a, 0x27, 0x83,
	0x91, 0x33, 0x18, 0x59, 0x35, 0x5d, 0x97, 0x9e, 0xfb, 0xd4, 0xb1, 0xea, 0x86, 0x76, 0x04, 0x2c,
	0xd2, 0x04, 0x22, 0x08, 0x9d, 0x93, 0x7e, 0xdf, 0x19, 0x8c, 0x04, 0xbe, 0x43, 0x1a, 0x60, 0x09,
	0xdc, 0x73, 0x9e, 0xf5, 0x9e, 0x0b, 0x94, 0x24, 0xf5, 0x39, 0xef, 0xba, 0x43, 0x84, 0x76, 0xf5,
	0x11, 0x12, 0xac, 0xc1, 0x05, 0xa5, 0x83, 0x2a, 0xd7, 0x1e, 0x3f, 0x84, 0x19, 0x57, 0x39, 0x9a,
	0x84, 0x42, 0x23, 0xbd, 0x47, 0x44, 0xb5, 0xf6, 0xf5, 0x16, 0xe5, 0xc1, 0xad, 0x16, 0x4d, 0xa6,
	0xe0, 0x7c, 0xf8, 0xa4, 0xed, 0x39, 0xd6, 0x5d, 0xdd, 0x2b, 0x89, 0xb4, 0x8e, 0xff, 0xc8, 0xcb,
	0x3b, 0x31, 0x14, 0x7f, 0x52, 0xc8, 0x17, 0x50, 0x56, 0x0f, 0x17, 0xa2, 0x1f, 0x1c, 0x99, 0x07,
	0x7c, 0xab, 0x79, 0x85, 0x67, 0x31, 0xbd, 0xb4, 0xef, 0x90, 0xa7, 0x50, 0xe9, 0xf6, 0x7b, 0xf2,
	0x67, 0xcb, 0xfd, 0x15, 0x5a, 0xea, 0xb5, 0xdd, 0xba, 0xb7, 0xd6, 0x2f, 0x82, 0x0d, 0x00, 0xba,
	0xfd, 0x9e, 0xba, 0xae, 0xef, 0xad, 0xb0, 0xd3, 0x0f, 0xe3, 0xd6, 0xff, 0xd7, 0x13, 0x44, 0x3c,
	0x07, 0x4a, 0xdd, 0x7e, 0x0f, 0xdf, 0x45, 0xab, 0xa9, 0x8d, 0x87, 0x6b, 0xab, 0xb5, 0xc6, 0x2b,
	0xc2, 0x3c, 0xc1, 0x1a, 0x89, 0x27, 0xcc, 0x6a, 0x4e, 0xf3, 0x89, 0xd9, 0xfa, 0xdf, 0x3a, 0x37,
	0x46, 0x7a, 0x51, 0xc4, 0xff, 0x95, 0x7c, 0xf2, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xc5,
	0x14, 0x6c, 0x3e, 0x11, 0x00, 0x00,
}
