// Code generated by protoc-gen-go. DO NOT EDIT.
// source: diary_dml.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 日记相关动作类型
type ActionDiaryType int32

const (
	ActionDiaryType_DIARYS_SAVE           ActionDiaryType = 0
	ActionDiaryType_DIARY_SAVE            ActionDiaryType = 1
	ActionDiaryType_DIARY_MODIFY          ActionDiaryType = 2
	ActionDiaryType_DIARYS_MODIFY         ActionDiaryType = 3
	ActionDiaryType_DIARY_DELETE          ActionDiaryType = 4
	ActionDiaryType_DIARYS_DELETE         ActionDiaryType = 5
	ActionDiaryType_DIARY_MODIFY_IMAGE    ActionDiaryType = 6
	ActionDiaryType_DIARY_MODIFY_VIDEO    ActionDiaryType = 7
	ActionDiaryType_DIARY_MODIFY_CONTENT  ActionDiaryType = 8
	ActionDiaryType_DIARY_LIKE            ActionDiaryType = 9
	ActionDiaryType_DIARY_COMMENT_LIKE    ActionDiaryType = 10
	ActionDiaryType_DIARY_REPLY_LIKE      ActionDiaryType = 11
	ActionDiaryType_DIARY_DISLIKE         ActionDiaryType = 12
	ActionDiaryType_DIARY_COMMENT_DISLIKE ActionDiaryType = 13
	ActionDiaryType_DIARY_REPLY_DISLIKE   ActionDiaryType = 14
	ActionDiaryType_DIARY_COMMENT         ActionDiaryType = 15
	ActionDiaryType_DIARY_REPLY           ActionDiaryType = 16
	ActionDiaryType_DIARY_SHARE           ActionDiaryType = 17
)

var ActionDiaryType_name = map[int32]string{
	0:  "DIARYS_SAVE",
	1:  "DIARY_SAVE",
	2:  "DIARY_MODIFY",
	3:  "DIARYS_MODIFY",
	4:  "DIARY_DELETE",
	5:  "DIARYS_DELETE",
	6:  "DIARY_MODIFY_IMAGE",
	7:  "DIARY_MODIFY_VIDEO",
	8:  "DIARY_MODIFY_CONTENT",
	9:  "DIARY_LIKE",
	10: "DIARY_COMMENT_LIKE",
	11: "DIARY_REPLY_LIKE",
	12: "DIARY_DISLIKE",
	13: "DIARY_COMMENT_DISLIKE",
	14: "DIARY_REPLY_DISLIKE",
	15: "DIARY_COMMENT",
	16: "DIARY_REPLY",
	17: "DIARY_SHARE",
}
var ActionDiaryType_value = map[string]int32{
	"DIARYS_SAVE":           0,
	"DIARY_SAVE":            1,
	"DIARY_MODIFY":          2,
	"DIARYS_MODIFY":         3,
	"DIARY_DELETE":          4,
	"DIARYS_DELETE":         5,
	"DIARY_MODIFY_IMAGE":    6,
	"DIARY_MODIFY_VIDEO":    7,
	"DIARY_MODIFY_CONTENT":  8,
	"DIARY_LIKE":            9,
	"DIARY_COMMENT_LIKE":    10,
	"DIARY_REPLY_LIKE":      11,
	"DIARY_DISLIKE":         12,
	"DIARY_COMMENT_DISLIKE": 13,
	"DIARY_REPLY_DISLIKE":   14,
	"DIARY_COMMENT":         15,
	"DIARY_REPLY":           16,
	"DIARY_SHARE":           17,
}

func (x ActionDiaryType) String() string {
	return proto.EnumName(ActionDiaryType_name, int32(x))
}
func (ActionDiaryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{0}
}

// 日记-新增、修改、删除请求体
type DMLDiaryRequest struct {
	Action               *DiaryAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Diarys               []*Diary     `protobuf:"bytes,2,rep,name=diarys,proto3" json:"diarys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DMLDiaryRequest) Reset()         { *m = DMLDiaryRequest{} }
func (m *DMLDiaryRequest) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryRequest) ProtoMessage()    {}
func (*DMLDiaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{0}
}
func (m *DMLDiaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryRequest.Unmarshal(m, b)
}
func (m *DMLDiaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryRequest.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryRequest.Merge(dst, src)
}
func (m *DMLDiaryRequest) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryRequest.Size(m)
}
func (m *DMLDiaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryRequest proto.InternalMessageInfo

func (m *DMLDiaryRequest) GetAction() *DiaryAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLDiaryRequest) GetDiarys() []*Diary {
	if m != nil {
		return m.Diarys
	}
	return nil
}

// 日记-新增、修改、删除响应体
type DMLDiaryReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLDiaryReply) Reset()         { *m = DMLDiaryReply{} }
func (m *DMLDiaryReply) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryReply) ProtoMessage()    {}
func (*DMLDiaryReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{1}
}
func (m *DMLDiaryReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryReply.Unmarshal(m, b)
}
func (m *DMLDiaryReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryReply.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryReply.Merge(dst, src)
}
func (m *DMLDiaryReply) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryReply.Size(m)
}
func (m *DMLDiaryReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryReply proto.InternalMessageInfo

func (m *DMLDiaryReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 评论、回复、相关请求体
type DMLDiaryCommentRequest struct {
	Action               *DiaryAction    `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Comments             []*DiaryComment `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DMLDiaryCommentRequest) Reset()         { *m = DMLDiaryCommentRequest{} }
func (m *DMLDiaryCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryCommentRequest) ProtoMessage()    {}
func (*DMLDiaryCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{2}
}
func (m *DMLDiaryCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryCommentRequest.Unmarshal(m, b)
}
func (m *DMLDiaryCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryCommentRequest.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryCommentRequest.Merge(dst, src)
}
func (m *DMLDiaryCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryCommentRequest.Size(m)
}
func (m *DMLDiaryCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryCommentRequest proto.InternalMessageInfo

func (m *DMLDiaryCommentRequest) GetAction() *DiaryAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLDiaryCommentRequest) GetComments() []*DiaryComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

// 评论、回复、相关响应体
type DMLDiaryCommentReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLDiaryCommentReply) Reset()         { *m = DMLDiaryCommentReply{} }
func (m *DMLDiaryCommentReply) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryCommentReply) ProtoMessage()    {}
func (*DMLDiaryCommentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{3}
}
func (m *DMLDiaryCommentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryCommentReply.Unmarshal(m, b)
}
func (m *DMLDiaryCommentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryCommentReply.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryCommentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryCommentReply.Merge(dst, src)
}
func (m *DMLDiaryCommentReply) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryCommentReply.Size(m)
}
func (m *DMLDiaryCommentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryCommentReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryCommentReply proto.InternalMessageInfo

func (m *DMLDiaryCommentReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 点赞请求体
type DMLDiaryLikeRequest struct {
	Action               *DiaryAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Likes                []*DiaryLike `protobuf:"bytes,2,rep,name=likes,proto3" json:"likes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DMLDiaryLikeRequest) Reset()         { *m = DMLDiaryLikeRequest{} }
func (m *DMLDiaryLikeRequest) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryLikeRequest) ProtoMessage()    {}
func (*DMLDiaryLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{4}
}
func (m *DMLDiaryLikeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryLikeRequest.Unmarshal(m, b)
}
func (m *DMLDiaryLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryLikeRequest.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryLikeRequest.Merge(dst, src)
}
func (m *DMLDiaryLikeRequest) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryLikeRequest.Size(m)
}
func (m *DMLDiaryLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryLikeRequest proto.InternalMessageInfo

func (m *DMLDiaryLikeRequest) GetAction() *DiaryAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLDiaryLikeRequest) GetLikes() []*DiaryLike {
	if m != nil {
		return m.Likes
	}
	return nil
}

// 点赞响应体
type DMLDiaryLikeReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLDiaryLikeReply) Reset()         { *m = DMLDiaryLikeReply{} }
func (m *DMLDiaryLikeReply) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryLikeReply) ProtoMessage()    {}
func (*DMLDiaryLikeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{5}
}
func (m *DMLDiaryLikeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryLikeReply.Unmarshal(m, b)
}
func (m *DMLDiaryLikeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryLikeReply.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryLikeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryLikeReply.Merge(dst, src)
}
func (m *DMLDiaryLikeReply) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryLikeReply.Size(m)
}
func (m *DMLDiaryLikeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryLikeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryLikeReply proto.InternalMessageInfo

func (m *DMLDiaryLikeReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 分享请求体
type DMLDiaryShareRequest struct {
	Action               *DiaryAction  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Shares               []*DiaryShare `protobuf:"bytes,2,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DMLDiaryShareRequest) Reset()         { *m = DMLDiaryShareRequest{} }
func (m *DMLDiaryShareRequest) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryShareRequest) ProtoMessage()    {}
func (*DMLDiaryShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{6}
}
func (m *DMLDiaryShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryShareRequest.Unmarshal(m, b)
}
func (m *DMLDiaryShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryShareRequest.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryShareRequest.Merge(dst, src)
}
func (m *DMLDiaryShareRequest) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryShareRequest.Size(m)
}
func (m *DMLDiaryShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryShareRequest proto.InternalMessageInfo

func (m *DMLDiaryShareRequest) GetAction() *DiaryAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DMLDiaryShareRequest) GetShares() []*DiaryShare {
	if m != nil {
		return m.Shares
	}
	return nil
}

// 分享响应体
type DMLDiaryShareReply struct {
	Message              int64    `protobuf:"zigzag64,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DMLDiaryShareReply) Reset()         { *m = DMLDiaryShareReply{} }
func (m *DMLDiaryShareReply) String() string { return proto.CompactTextString(m) }
func (*DMLDiaryShareReply) ProtoMessage()    {}
func (*DMLDiaryShareReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{7}
}
func (m *DMLDiaryShareReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DMLDiaryShareReply.Unmarshal(m, b)
}
func (m *DMLDiaryShareReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DMLDiaryShareReply.Marshal(b, m, deterministic)
}
func (dst *DMLDiaryShareReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DMLDiaryShareReply.Merge(dst, src)
}
func (m *DMLDiaryShareReply) XXX_Size() int {
	return xxx_messageInfo_DMLDiaryShareReply.Size(m)
}
func (m *DMLDiaryShareReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DMLDiaryShareReply.DiscardUnknown(m)
}

var xxx_messageInfo_DMLDiaryShareReply proto.InternalMessageInfo

func (m *DMLDiaryShareReply) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

// 动作结构体
type DiaryAction struct {
	ActionValue          ActionDiaryType `protobuf:"varint,1,opt,name=ActionValue,proto3,enum=service.ActionDiaryType" json:"ActionValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DiaryAction) Reset()         { *m = DiaryAction{} }
func (m *DiaryAction) String() string { return proto.CompactTextString(m) }
func (*DiaryAction) ProtoMessage()    {}
func (*DiaryAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{8}
}
func (m *DiaryAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryAction.Unmarshal(m, b)
}
func (m *DiaryAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryAction.Marshal(b, m, deterministic)
}
func (dst *DiaryAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryAction.Merge(dst, src)
}
func (m *DiaryAction) XXX_Size() int {
	return xxx_messageInfo_DiaryAction.Size(m)
}
func (m *DiaryAction) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryAction.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryAction proto.InternalMessageInfo

func (m *DiaryAction) GetActionValue() ActionDiaryType {
	if m != nil {
		return m.ActionValue
	}
	return ActionDiaryType_DIARYS_SAVE
}

// 点赞结构体
type DiaryLike struct {
	DiaryId              string      `protobuf:"bytes,1,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
	CommentId            string      `protobuf:"bytes,2,opt,name=commentId,proto3" json:"commentId,omitempty"`
	UserId               string      `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName             string      `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	UserPic              *DiaryImage `protobuf:"bytes,5,opt,name=userPic,proto3" json:"userPic,omitempty"`
	CreatedTime          int64       `protobuf:"zigzag64,6,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DiaryLike) Reset()         { *m = DiaryLike{} }
func (m *DiaryLike) String() string { return proto.CompactTextString(m) }
func (*DiaryLike) ProtoMessage()    {}
func (*DiaryLike) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{9}
}
func (m *DiaryLike) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryLike.Unmarshal(m, b)
}
func (m *DiaryLike) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryLike.Marshal(b, m, deterministic)
}
func (dst *DiaryLike) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryLike.Merge(dst, src)
}
func (m *DiaryLike) XXX_Size() int {
	return xxx_messageInfo_DiaryLike.Size(m)
}
func (m *DiaryLike) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryLike.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryLike proto.InternalMessageInfo

func (m *DiaryLike) GetDiaryId() string {
	if m != nil {
		return m.DiaryId
	}
	return ""
}

func (m *DiaryLike) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *DiaryLike) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DiaryLike) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *DiaryLike) GetUserPic() *DiaryImage {
	if m != nil {
		return m.UserPic
	}
	return nil
}

func (m *DiaryLike) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

// 分享结构体
type DiaryShare struct {
	DiaryId              string   `protobuf:"bytes,1,opt,name=diaryId,proto3" json:"diaryId,omitempty"`
	CommentId            string   `protobuf:"bytes,2,opt,name=commentId,proto3" json:"commentId,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ToURL                string   `protobuf:"bytes,4,opt,name=toURL,proto3" json:"toURL,omitempty"`
	CreatedTime          int64    `protobuf:"zigzag64,5,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiaryShare) Reset()         { *m = DiaryShare{} }
func (m *DiaryShare) String() string { return proto.CompactTextString(m) }
func (*DiaryShare) ProtoMessage()    {}
func (*DiaryShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{10}
}
func (m *DiaryShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryShare.Unmarshal(m, b)
}
func (m *DiaryShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryShare.Marshal(b, m, deterministic)
}
func (dst *DiaryShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryShare.Merge(dst, src)
}
func (m *DiaryShare) XXX_Size() int {
	return xxx_messageInfo_DiaryShare.Size(m)
}
func (m *DiaryShare) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryShare.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryShare proto.InternalMessageInfo

func (m *DiaryShare) GetDiaryId() string {
	if m != nil {
		return m.DiaryId
	}
	return ""
}

func (m *DiaryShare) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *DiaryShare) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DiaryShare) GetToURL() string {
	if m != nil {
		return m.ToURL
	}
	return ""
}

func (m *DiaryShare) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

// 日记结构体
type Diary struct {
	DiaryID              string        `protobuf:"bytes,1,opt,name=DiaryID,proto3" json:"DiaryID,omitempty"`
	CreatedTime          int64         `protobuf:"zigzag64,2,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	UpdateTime           int64         `protobuf:"zigzag64,3,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	DiaryTitle           string        `protobuf:"bytes,4,opt,name=DiaryTitle,proto3" json:"DiaryTitle,omitempty"`
	Status               int64         `protobuf:"zigzag64,5,opt,name=Status,proto3" json:"Status,omitempty"`
	Content              string        `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	HasUpChain           bool          `protobuf:"varint,13,opt,name=HasUpChain,proto3" json:"HasUpChain,omitempty"`
	MoneyReward          float64       `protobuf:"fixed64,14,opt,name=MoneyReward,proto3" json:"MoneyReward,omitempty"`
	MoneyRewardStatus    int64         `protobuf:"zigzag64,15,opt,name=MoneyRewardStatus,proto3" json:"MoneyRewardStatus,omitempty"`
	UserID               string        `protobuf:"bytes,16,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CoverMap             *DiaryImage   `protobuf:"bytes,19,opt,name=CoverMap,proto3" json:"CoverMap,omitempty"`
	DiaryTypes           []*DiaryType  `protobuf:"bytes,20,rep,name=DiaryTypes,proto3" json:"DiaryTypes,omitempty"`
	DiaryText            string        `protobuf:"bytes,21,opt,name=DiaryText,proto3" json:"DiaryText,omitempty"`
	Images               []*DiaryImage `protobuf:"bytes,22,rep,name=Images,proto3" json:"Images,omitempty"`
	Videos               []*DiaryVideo `protobuf:"bytes,23,rep,name=Videos,proto3" json:"Videos,omitempty"`
	Labels               []*DiaryLabel `protobuf:"bytes,24,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Diary) Reset()         { *m = Diary{} }
func (m *Diary) String() string { return proto.CompactTextString(m) }
func (*Diary) ProtoMessage()    {}
func (*Diary) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{11}
}
func (m *Diary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Diary.Unmarshal(m, b)
}
func (m *Diary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Diary.Marshal(b, m, deterministic)
}
func (dst *Diary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Diary.Merge(dst, src)
}
func (m *Diary) XXX_Size() int {
	return xxx_messageInfo_Diary.Size(m)
}
func (m *Diary) XXX_DiscardUnknown() {
	xxx_messageInfo_Diary.DiscardUnknown(m)
}

var xxx_messageInfo_Diary proto.InternalMessageInfo

func (m *Diary) GetDiaryID() string {
	if m != nil {
		return m.DiaryID
	}
	return ""
}

func (m *Diary) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Diary) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *Diary) GetDiaryTitle() string {
	if m != nil {
		return m.DiaryTitle
	}
	return ""
}

func (m *Diary) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Diary) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Diary) GetHasUpChain() bool {
	if m != nil {
		return m.HasUpChain
	}
	return false
}

func (m *Diary) GetMoneyReward() float64 {
	if m != nil {
		return m.MoneyReward
	}
	return 0
}

func (m *Diary) GetMoneyRewardStatus() int64 {
	if m != nil {
		return m.MoneyRewardStatus
	}
	return 0
}

func (m *Diary) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Diary) GetCoverMap() *DiaryImage {
	if m != nil {
		return m.CoverMap
	}
	return nil
}

func (m *Diary) GetDiaryTypes() []*DiaryType {
	if m != nil {
		return m.DiaryTypes
	}
	return nil
}

func (m *Diary) GetDiaryText() string {
	if m != nil {
		return m.DiaryText
	}
	return ""
}

func (m *Diary) GetImages() []*DiaryImage {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Diary) GetVideos() []*DiaryVideo {
	if m != nil {
		return m.Videos
	}
	return nil
}

func (m *Diary) GetLabels() []*DiaryLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

// 日记类型结构体
type DiaryType struct {
	DiaryTypeID           string   `protobuf:"bytes,1,opt,name=DiaryTypeID,proto3" json:"DiaryTypeID,omitempty"`
	ParentID              string   `protobuf:"bytes,2,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	DiaryTypeStatus       int64    `protobuf:"zigzag64,3,opt,name=DiaryTypeStatus,proto3" json:"DiaryTypeStatus,omitempty"`
	DiaryTypeOnlineStatus int64    `protobuf:"zigzag64,4,opt,name=DiaryTypeOnlineStatus,proto3" json:"DiaryTypeOnlineStatus,omitempty"`
	DiaryTypeName         string   `protobuf:"bytes,5,opt,name=DiaryTypeName,proto3" json:"DiaryTypeName,omitempty"`
	CreateTime            int64    `protobuf:"zigzag64,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime            int64    `protobuf:"zigzag64,7,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Sequence              int64    `protobuf:"zigzag64,8,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *DiaryType) Reset()         { *m = DiaryType{} }
func (m *DiaryType) String() string { return proto.CompactTextString(m) }
func (*DiaryType) ProtoMessage()    {}
func (*DiaryType) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{12}
}
func (m *DiaryType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryType.Unmarshal(m, b)
}
func (m *DiaryType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryType.Marshal(b, m, deterministic)
}
func (dst *DiaryType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryType.Merge(dst, src)
}
func (m *DiaryType) XXX_Size() int {
	return xxx_messageInfo_DiaryType.Size(m)
}
func (m *DiaryType) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryType.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryType proto.InternalMessageInfo

func (m *DiaryType) GetDiaryTypeID() string {
	if m != nil {
		return m.DiaryTypeID
	}
	return ""
}

func (m *DiaryType) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

func (m *DiaryType) GetDiaryTypeStatus() int64 {
	if m != nil {
		return m.DiaryTypeStatus
	}
	return 0
}

func (m *DiaryType) GetDiaryTypeOnlineStatus() int64 {
	if m != nil {
		return m.DiaryTypeOnlineStatus
	}
	return 0
}

func (m *DiaryType) GetDiaryTypeName() string {
	if m != nil {
		return m.DiaryTypeName
	}
	return ""
}

func (m *DiaryType) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *DiaryType) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *DiaryType) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

// 日记标签结构体
type DiaryLabel struct {
	LabelID              string   `protobuf:"bytes,1,opt,name=LabelID,proto3" json:"LabelID,omitempty"`
	LabelContent         string   `protobuf:"bytes,2,opt,name=LabelContent,proto3" json:"LabelContent,omitempty"`
	CreateTime           int64    `protobuf:"zigzag64,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime           int64    `protobuf:"zigzag64,4,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiaryLabel) Reset()         { *m = DiaryLabel{} }
func (m *DiaryLabel) String() string { return proto.CompactTextString(m) }
func (*DiaryLabel) ProtoMessage()    {}
func (*DiaryLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{13}
}
func (m *DiaryLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryLabel.Unmarshal(m, b)
}
func (m *DiaryLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryLabel.Marshal(b, m, deterministic)
}
func (dst *DiaryLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryLabel.Merge(dst, src)
}
func (m *DiaryLabel) XXX_Size() int {
	return xxx_messageInfo_DiaryLabel.Size(m)
}
func (m *DiaryLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryLabel.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryLabel proto.InternalMessageInfo

func (m *DiaryLabel) GetLabelID() string {
	if m != nil {
		return m.LabelID
	}
	return ""
}

func (m *DiaryLabel) GetLabelContent() string {
	if m != nil {
		return m.LabelContent
	}
	return ""
}

func (m *DiaryLabel) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *DiaryLabel) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

// 日记图片结构体
type DiaryImage struct {
	ImageID              string   `protobuf:"bytes,1,opt,name=ImageID,proto3" json:"ImageID,omitempty"`
	ImageName            string   `protobuf:"bytes,2,opt,name=ImageName,proto3" json:"ImageName,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ImageState           int64    `protobuf:"zigzag64,4,opt,name=ImageState,proto3" json:"ImageState,omitempty"`
	DiaryID              string   `protobuf:"bytes,5,opt,name=DiaryID,proto3" json:"DiaryID,omitempty"`
	Ratio                float64  `protobuf:"fixed64,6,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	ImageType            string   `protobuf:"bytes,7,opt,name=ImageType,proto3" json:"ImageType,omitempty"`
	ImageUrl             string   `protobuf:"bytes,8,opt,name=ImageUrl,proto3" json:"ImageUrl,omitempty"`
	ImageBase64          string   `protobuf:"bytes,9,opt,name=ImageBase64,proto3" json:"ImageBase64,omitempty"`
	Cause                string   `protobuf:"bytes,10,opt,name=cause,proto3" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiaryImage) Reset()         { *m = DiaryImage{} }
func (m *DiaryImage) String() string { return proto.CompactTextString(m) }
func (*DiaryImage) ProtoMessage()    {}
func (*DiaryImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{14}
}
func (m *DiaryImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryImage.Unmarshal(m, b)
}
func (m *DiaryImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryImage.Marshal(b, m, deterministic)
}
func (dst *DiaryImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryImage.Merge(dst, src)
}
func (m *DiaryImage) XXX_Size() int {
	return xxx_messageInfo_DiaryImage.Size(m)
}
func (m *DiaryImage) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryImage.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryImage proto.InternalMessageInfo

func (m *DiaryImage) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *DiaryImage) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *DiaryImage) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DiaryImage) GetImageState() int64 {
	if m != nil {
		return m.ImageState
	}
	return 0
}

func (m *DiaryImage) GetDiaryID() string {
	if m != nil {
		return m.DiaryID
	}
	return ""
}

func (m *DiaryImage) GetRatio() float64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

func (m *DiaryImage) GetImageType() string {
	if m != nil {
		return m.ImageType
	}
	return ""
}

func (m *DiaryImage) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *DiaryImage) GetImageBase64() string {
	if m != nil {
		return m.ImageBase64
	}
	return ""
}

func (m *DiaryImage) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

// 日记视频结构体
type DiaryVideo struct {
	VideoID              string   `protobuf:"bytes,1,opt,name=VideoID,proto3" json:"VideoID,omitempty"`
	VideoName            string   `protobuf:"bytes,2,opt,name=VideoName,proto3" json:"VideoName,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	VideoState           int64    `protobuf:"zigzag64,4,opt,name=VideoState,proto3" json:"VideoState,omitempty"`
	DiaryID              string   `protobuf:"bytes,5,opt,name=DiaryID,proto3" json:"DiaryID,omitempty"`
	Ratio                float64  `protobuf:"fixed64,6,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	VideoUrl             string   `protobuf:"bytes,7,opt,name=VideoUrl,proto3" json:"VideoUrl,omitempty"`
	VideoBase64          string   `protobuf:"bytes,8,opt,name=VideoBase64,proto3" json:"VideoBase64,omitempty"`
	VideoType            string   `protobuf:"bytes,9,opt,name=VideoType,proto3" json:"VideoType,omitempty"`
	VideoImage           string   `protobuf:"bytes,10,opt,name=VideoImage,proto3" json:"VideoImage,omitempty"`
	VideoImageType       string   `protobuf:"bytes,11,opt,name=VideoImageType,proto3" json:"VideoImageType,omitempty"`
	Cause                string   `protobuf:"bytes,12,opt,name=cause,proto3" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiaryVideo) Reset()         { *m = DiaryVideo{} }
func (m *DiaryVideo) String() string { return proto.CompactTextString(m) }
func (*DiaryVideo) ProtoMessage()    {}
func (*DiaryVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{15}
}
func (m *DiaryVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryVideo.Unmarshal(m, b)
}
func (m *DiaryVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryVideo.Marshal(b, m, deterministic)
}
func (dst *DiaryVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryVideo.Merge(dst, src)
}
func (m *DiaryVideo) XXX_Size() int {
	return xxx_messageInfo_DiaryVideo.Size(m)
}
func (m *DiaryVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryVideo.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryVideo proto.InternalMessageInfo

func (m *DiaryVideo) GetVideoID() string {
	if m != nil {
		return m.VideoID
	}
	return ""
}

func (m *DiaryVideo) GetVideoName() string {
	if m != nil {
		return m.VideoName
	}
	return ""
}

func (m *DiaryVideo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DiaryVideo) GetVideoState() int64 {
	if m != nil {
		return m.VideoState
	}
	return 0
}

func (m *DiaryVideo) GetDiaryID() string {
	if m != nil {
		return m.DiaryID
	}
	return ""
}

func (m *DiaryVideo) GetRatio() float64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

func (m *DiaryVideo) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *DiaryVideo) GetVideoBase64() string {
	if m != nil {
		return m.VideoBase64
	}
	return ""
}

func (m *DiaryVideo) GetVideoType() string {
	if m != nil {
		return m.VideoType
	}
	return ""
}

func (m *DiaryVideo) GetVideoImage() string {
	if m != nil {
		return m.VideoImage
	}
	return ""
}

func (m *DiaryVideo) GetVideoImageType() string {
	if m != nil {
		return m.VideoImageType
	}
	return ""
}

func (m *DiaryVideo) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

// 评论回复相关结构体
type DiaryComment struct {
	CommentID            string   `protobuf:"bytes,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	DiaryID              string   `protobuf:"bytes,2,opt,name=DiaryID,proto3" json:"DiaryID,omitempty"`
	CreateTime           int64    `protobuf:"zigzag64,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpDateTime           int64    `protobuf:"zigzag64,4,opt,name=UpDateTime,proto3" json:"UpDateTime,omitempty"`
	Visible              bool     `protobuf:"varint,7,opt,name=Visible,proto3" json:"Visible,omitempty"`
	UserID               string   `protobuf:"bytes,8,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Content              string   `protobuf:"bytes,11,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiaryComment) Reset()         { *m = DiaryComment{} }
func (m *DiaryComment) String() string { return proto.CompactTextString(m) }
func (*DiaryComment) ProtoMessage()    {}
func (*DiaryComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_diary_dml_2503d2367488c199, []int{16}
}
func (m *DiaryComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryComment.Unmarshal(m, b)
}
func (m *DiaryComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryComment.Marshal(b, m, deterministic)
}
func (dst *DiaryComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryComment.Merge(dst, src)
}
func (m *DiaryComment) XXX_Size() int {
	return xxx_messageInfo_DiaryComment.Size(m)
}
func (m *DiaryComment) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryComment.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryComment proto.InternalMessageInfo

func (m *DiaryComment) GetCommentID() string {
	if m != nil {
		return m.CommentID
	}
	return ""
}

func (m *DiaryComment) GetDiaryID() string {
	if m != nil {
		return m.DiaryID
	}
	return ""
}

func (m *DiaryComment) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *DiaryComment) GetUpDateTime() int64 {
	if m != nil {
		return m.UpDateTime
	}
	return 0
}

func (m *DiaryComment) GetVisible() bool {
	if m != nil {
		return m.Visible
	}
	return false
}

func (m *DiaryComment) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DiaryComment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*DMLDiaryRequest)(nil), "service.DMLDiaryRequest")
	proto.RegisterType((*DMLDiaryReply)(nil), "service.DMLDiaryReply")
	proto.RegisterType((*DMLDiaryCommentRequest)(nil), "service.DMLDiaryCommentRequest")
	proto.RegisterType((*DMLDiaryCommentReply)(nil), "service.DMLDiaryCommentReply")
	proto.RegisterType((*DMLDiaryLikeRequest)(nil), "service.DMLDiaryLikeRequest")
	proto.RegisterType((*DMLDiaryLikeReply)(nil), "service.DMLDiaryLikeReply")
	proto.RegisterType((*DMLDiaryShareRequest)(nil), "service.DMLDiaryShareRequest")
	proto.RegisterType((*DMLDiaryShareReply)(nil), "service.DMLDiaryShareReply")
	proto.RegisterType((*DiaryAction)(nil), "service.DiaryAction")
	proto.RegisterType((*DiaryLike)(nil), "service.DiaryLike")
	proto.RegisterType((*DiaryShare)(nil), "service.DiaryShare")
	proto.RegisterType((*Diary)(nil), "service.Diary")
	proto.RegisterType((*DiaryType)(nil), "service.DiaryType")
	proto.RegisterType((*DiaryLabel)(nil), "service.DiaryLabel")
	proto.RegisterType((*DiaryImage)(nil), "service.DiaryImage")
	proto.RegisterType((*DiaryVideo)(nil), "service.DiaryVideo")
	proto.RegisterType((*DiaryComment)(nil), "service.DiaryComment")
	proto.RegisterEnum("service.ActionDiaryType", ActionDiaryType_name, ActionDiaryType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiaryServiceClient is the client API for DiaryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiaryServiceClient interface {
	DMLDiary(ctx context.Context, in *DMLDiaryRequest, opts ...grpc.CallOption) (*DMLDiaryReply, error)
	DMLComment(ctx context.Context, in *DMLDiaryCommentRequest, opts ...grpc.CallOption) (*DMLDiaryCommentReply, error)
	DMLLike(ctx context.Context, in *DMLDiaryLikeRequest, opts ...grpc.CallOption) (*DMLDiaryLikeReply, error)
	DMLShare(ctx context.Context, in *DMLDiaryShareRequest, opts ...grpc.CallOption) (*DMLDiaryShareReply, error)
}

type diaryServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiaryServiceClient(cc *grpc.ClientConn) DiaryServiceClient {
	return &diaryServiceClient{cc}
}

func (c *diaryServiceClient) DMLDiary(ctx context.Context, in *DMLDiaryRequest, opts ...grpc.CallOption) (*DMLDiaryReply, error) {
	out := new(DMLDiaryReply)
	err := c.cc.Invoke(ctx, "/service.DiaryService/DMLDiary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diaryServiceClient) DMLComment(ctx context.Context, in *DMLDiaryCommentRequest, opts ...grpc.CallOption) (*DMLDiaryCommentReply, error) {
	out := new(DMLDiaryCommentReply)
	err := c.cc.Invoke(ctx, "/service.DiaryService/DMLComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diaryServiceClient) DMLLike(ctx context.Context, in *DMLDiaryLikeRequest, opts ...grpc.CallOption) (*DMLDiaryLikeReply, error) {
	out := new(DMLDiaryLikeReply)
	err := c.cc.Invoke(ctx, "/service.DiaryService/DMLLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diaryServiceClient) DMLShare(ctx context.Context, in *DMLDiaryShareRequest, opts ...grpc.CallOption) (*DMLDiaryShareReply, error) {
	out := new(DMLDiaryShareReply)
	err := c.cc.Invoke(ctx, "/service.DiaryService/DMLShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiaryServiceServer is the server API for DiaryService service.
type DiaryServiceServer interface {
	DMLDiary(context.Context, *DMLDiaryRequest) (*DMLDiaryReply, error)
	DMLComment(context.Context, *DMLDiaryCommentRequest) (*DMLDiaryCommentReply, error)
	DMLLike(context.Context, *DMLDiaryLikeRequest) (*DMLDiaryLikeReply, error)
	DMLShare(context.Context, *DMLDiaryShareRequest) (*DMLDiaryShareReply, error)
}

func RegisterDiaryServiceServer(s *grpc.Server, srv DiaryServiceServer) {
	s.RegisterService(&_DiaryService_serviceDesc, srv)
}

func _DiaryService_DMLDiary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLDiaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiaryServiceServer).DMLDiary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DiaryService/DMLDiary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiaryServiceServer).DMLDiary(ctx, req.(*DMLDiaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiaryService_DMLComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLDiaryCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiaryServiceServer).DMLComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DiaryService/DMLComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiaryServiceServer).DMLComment(ctx, req.(*DMLDiaryCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiaryService_DMLLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLDiaryLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiaryServiceServer).DMLLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DiaryService/DMLLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiaryServiceServer).DMLLike(ctx, req.(*DMLDiaryLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiaryService_DMLShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DMLDiaryShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiaryServiceServer).DMLShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.DiaryService/DMLShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiaryServiceServer).DMLShare(ctx, req.(*DMLDiaryShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiaryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.DiaryService",
	HandlerType: (*DiaryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DMLDiary",
			Handler:    _DiaryService_DMLDiary_Handler,
		},
		{
			MethodName: "DMLComment",
			Handler:    _DiaryService_DMLComment_Handler,
		},
		{
			MethodName: "DMLLike",
			Handler:    _DiaryService_DMLLike_Handler,
		},
		{
			MethodName: "DMLShare",
			Handler:    _DiaryService_DMLShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "diary_dml.proto",
}

func init() { proto.RegisterFile("diary_dml.proto", fileDescriptor_diary_dml_2503d2367488c199) }

var fileDescriptor_diary_dml_2503d2367488c199 = []byte{
	// 1234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcd, 0x72, 0xe3, 0x44,
	0x10, 0x5e, 0xdb, 0xb1, 0x2d, 0xb7, 0x13, 0x5b, 0x99, 0x38, 0xd9, 0xc1, 0x2c, 0x4b, 0x4a, 0x45,
	0x6d, 0x19, 0xd8, 0x0d, 0x10, 0xb6, 0x38, 0x70, 0xa0, 0x2a, 0x58, 0x82, 0x75, 0x61, 0x27, 0x5b,
	0xb2, 0x93, 0xaa, 0x3d, 0xa5, 0xb4, 0xf6, 0x54, 0x56, 0xb5, 0xf2, 0xcf, 0x5a, 0xca, 0x82, 0x6f,
	0x9c, 0x39, 0x73, 0xe6, 0x05, 0x38, 0xf0, 0x18, 0x70, 0xe6, 0x21, 0x78, 0x0e, 0x6a, 0x7a, 0x7e,
	0x34, 0x92, 0x9d, 0x00, 0x29, 0x6e, 0xd3, 0x5f, 0x7f, 0xea, 0xf9, 0xe6, 0x53, 0xf7, 0x58, 0x86,
	0xe6, 0x24, 0x0c, 0x96, 0xab, 0xcb, 0xc9, 0x34, 0x3a, 0x5a, 0x2c, 0xe7, 0xc9, 0x9c, 0x54, 0x63,
	0xb6, 0x7c, 0x1b, 0x8e, 0x99, 0x73, 0x05, 0x4d, 0x77, 0xd0, 0x77, 0x79, 0xda, 0x67, 0x6f, 0xae,
	0x59, 0x9c, 0x90, 0xc7, 0x50, 0x09, 0xc6, 0x49, 0x38, 0x9f, 0xd1, 0xc2, 0x61, 0xa1, 0x53, 0x3f,
	0x6e, 0x1d, 0x49, 0xf2, 0x11, 0xd2, 0x4e, 0x30, 0xe7, 0x4b, 0x0e, 0x79, 0x04, 0x15, 0x2c, 0x1e,
	0xd3, 0xe2, 0x61, 0xa9, 0x53, 0x3f, 0x6e, 0x64, 0xd9, 0xbe, 0xcc, 0x3a, 0x1f, 0xc2, 0x4e, 0xba,
	0xd1, 0x22, 0x5a, 0x11, 0x0a, 0xd5, 0x29, 0x8b, 0xe3, 0xe0, 0x8a, 0xe1, 0x3e, 0xc4, 0x57, 0xa1,
	0xb3, 0x82, 0x03, 0x45, 0xed, 0xce, 0xa7, 0x53, 0x36, 0x4b, 0xee, 0x26, 0xed, 0x33, 0xb0, 0xc6,
	0xe2, 0x79, 0x25, 0x6e, 0x3f, 0xcb, 0x57, 0xd5, 0x35, 0xcd, 0xf9, 0x14, 0x5a, 0x6b, 0x5b, 0xdf,
	0x2e, 0x76, 0x0a, 0x7b, 0xea, 0x89, 0x7e, 0xf8, 0x9a, 0xdd, 0x4d, 0x69, 0x07, 0xca, 0x51, 0xf8,
	0x9a, 0x29, 0x99, 0x24, 0x4b, 0xc6, 0xba, 0x82, 0xe0, 0x3c, 0x81, 0xdd, 0xec, 0x76, 0xb7, 0xab,
	0x7b, 0x93, 0x9e, 0x67, 0xf8, 0x2a, 0x58, 0xde, 0x51, 0xde, 0xc7, 0x50, 0x89, 0xf9, 0xd3, 0x4a,
	0xdf, 0x5e, 0x96, 0x2d, 0x2a, 0x4b, 0x8a, 0x73, 0x04, 0x24, 0xb7, 0xe5, 0xed, 0x12, 0x7b, 0x50,
	0x37, 0xf6, 0x24, 0x5f, 0x42, 0x5d, 0xac, 0x2e, 0x82, 0xe8, 0x5a, 0x90, 0x1b, 0xc7, 0x54, 0x6f,
	0x28, 0x72, 0xf8, 0xc0, 0x68, 0xb5, 0x60, 0xbe, 0x49, 0x76, 0xfe, 0x28, 0x40, 0x4d, 0x5b, 0xc3,
	0xb7, 0xc4, 0xde, 0xeb, 0x4d, 0xb0, 0x4a, 0xcd, 0x57, 0x21, 0x79, 0x00, 0x35, 0xf9, 0xc6, 0x7b,
	0x13, 0x5a, 0xc4, 0x5c, 0x0a, 0x90, 0x03, 0xa8, 0x5c, 0xc7, 0x6c, 0xd9, 0x9b, 0xd0, 0x12, 0xa6,
	0x64, 0x44, 0xda, 0x60, 0xf1, 0xd5, 0x69, 0x30, 0x65, 0x74, 0x0b, 0x33, 0x3a, 0x26, 0x4f, 0xa0,
	0xca, 0xd7, 0xcf, 0xc3, 0x31, 0x2d, 0xa3, 0xa1, 0x39, 0x8b, 0x7a, 0xd3, 0xe0, 0x8a, 0xf9, 0x8a,
	0x43, 0x0e, 0xa1, 0xde, 0x5d, 0xb2, 0x20, 0x61, 0x93, 0x51, 0x38, 0x65, 0xb4, 0x82, 0x8e, 0x98,
	0x90, 0xf3, 0x73, 0x01, 0x20, 0xf5, 0xf0, 0x7f, 0x3f, 0x4b, 0x0b, 0xca, 0xc9, 0xfc, 0xdc, 0xef,
	0xcb, 0x83, 0x88, 0x20, 0x2f, 0xab, 0xbc, 0x2e, 0xeb, 0xf7, 0x2d, 0x28, 0xa3, 0x2c, 0xae, 0x48,
	0x9c, 0xcc, 0x55, 0x8a, 0x64, 0x98, 0xaf, 0x52, 0x5c, 0xab, 0x42, 0x1e, 0x02, 0x9c, 0x2f, 0x26,
	0x41, 0xc2, 0x90, 0x50, 0x42, 0x82, 0x81, 0xf0, 0xbc, 0x78, 0xc3, 0x61, 0x12, 0x29, 0xaf, 0x0d,
	0x84, 0x9f, 0x6a, 0x98, 0x04, 0xc9, 0x75, 0x2c, 0x25, 0xca, 0x88, 0x6b, 0xea, 0xce, 0x67, 0x09,
	0x9b, 0x25, 0x68, 0x69, 0xcd, 0x57, 0x21, 0xaf, 0xf8, 0x2c, 0x88, 0xcf, 0x17, 0xdd, 0x57, 0x41,
	0x38, 0xa3, 0x3b, 0x87, 0x85, 0x8e, 0xe5, 0x1b, 0x08, 0xd7, 0x3c, 0x98, 0xcf, 0xd8, 0xca, 0x67,
	0xdf, 0x07, 0xcb, 0x09, 0x6d, 0x1c, 0x16, 0x3a, 0x05, 0xdf, 0x84, 0xc8, 0x63, 0xd8, 0x35, 0x42,
	0xb9, 0x7d, 0x13, 0xb7, 0x5f, 0x4f, 0x70, 0x85, 0xe7, 0xdc, 0x69, 0x97, 0xda, 0xc2, 0x77, 0x11,
	0x91, 0x4f, 0xc0, 0xea, 0xce, 0xdf, 0xb2, 0xe5, 0x20, 0x58, 0xd0, 0xbd, 0x9b, 0x1b, 0x45, 0x93,
	0xc8, 0xb1, 0xb2, 0x62, 0xb5, 0x60, 0x31, 0x6d, 0x6d, 0xba, 0x1e, 0x70, 0x0e, 0x0c, 0x16, 0x6f,
	0x09, 0x11, 0xb1, 0x1f, 0x12, 0xba, 0x2f, 0x5a, 0x42, 0x03, 0x7c, 0x98, 0x71, 0x93, 0x98, 0x1e,
	0x6c, 0x1a, 0x66, 0x21, 0x40, 0x52, 0x38, 0xf9, 0x22, 0x9c, 0xb0, 0x79, 0x4c, 0xef, 0x6f, 0x22,
	0x63, 0xce, 0x97, 0x14, 0x4e, 0x8e, 0x82, 0x97, 0x2c, 0x8a, 0x29, 0xdd, 0x44, 0xee, 0xf3, 0x9c,
	0x2f, 0x29, 0xce, 0xaf, 0x45, 0xa5, 0x72, 0xb5, 0x60, 0xdc, 0x7f, 0x1d, 0xe8, 0x8e, 0x32, 0x21,
	0x3e, 0x7d, 0xcf, 0x83, 0x25, 0xef, 0x6a, 0x57, 0xb6, 0xb9, 0x8e, 0x49, 0x07, 0x9a, 0x9a, 0x2a,
	0xdf, 0x8c, 0x68, 0xaa, 0x3c, 0x4c, 0x9e, 0xc2, 0xbe, 0x86, 0xce, 0x66, 0x51, 0x38, 0x53, 0xfc,
	0x2d, 0xe4, 0x6f, 0x4e, 0x92, 0x0f, 0x60, 0x47, 0x27, 0x70, 0xfc, 0xcb, 0x28, 0x20, 0x0b, 0xf2,
	0x1e, 0x13, 0x4d, 0x6e, 0xcc, 0xb4, 0x81, 0xe4, 0xba, 0xbe, 0xba, 0xd6, 0xf5, 0x6d, 0xb0, 0x86,
	0xfc, 0x7a, 0x9e, 0x8d, 0x19, 0xb5, 0x30, 0xab, 0x63, 0xe7, 0x27, 0x75, 0x1d, 0xa0, 0x89, 0xbc,
	0xd1, 0x71, 0x91, 0x0e, 0x9f, 0x0c, 0x89, 0x03, 0xdb, 0xb8, 0x54, 0x73, 0x20, 0xac, 0xca, 0x60,
	0x39, 0xa1, 0xa5, 0x7f, 0x10, 0xba, 0x95, 0x17, 0xea, 0xfc, 0x52, 0x94, 0x62, 0xb0, 0x49, 0xb8,
	0x18, 0x5c, 0xa4, 0x62, 0x64, 0xc8, 0x1b, 0x11, 0x97, 0xe8, 0x99, 0xbc, 0x9b, 0x34, 0x60, 0xcc,
	0x48, 0x29, 0x33, 0x23, 0x0f, 0x01, 0x90, 0xc4, 0xcd, 0xd7, 0xdb, 0xa7, 0x88, 0x79, 0xf3, 0x94,
	0xb3, 0x37, 0x4f, 0x0b, 0xca, 0x7e, 0x90, 0x84, 0x73, 0x34, 0xbf, 0xe0, 0x8b, 0x40, 0xab, 0xe0,
	0x2f, 0x0a, 0x6d, 0x57, 0x2a, 0xb0, 0xf3, 0xda, 0x60, 0x61, 0x70, 0xbe, 0x8c, 0xd0, 0xf5, 0x9a,
	0xaf, 0x63, 0xde, 0x95, 0xb8, 0xfe, 0x3a, 0x88, 0xd9, 0x17, 0x4f, 0x69, 0x4d, 0x74, 0xa5, 0x01,
	0xf1, 0x1d, 0xc7, 0xc1, 0x75, 0xcc, 0x28, 0x88, 0x7b, 0x14, 0x03, 0xe7, 0x2f, 0x65, 0x10, 0x0e,
	0x06, 0x17, 0x8c, 0x8b, 0xd4, 0x20, 0x19, 0x72, 0x69, 0xb8, 0x34, 0x0d, 0xd2, 0xc0, 0x6d, 0x06,
	0x21, 0x29, 0x63, 0x50, 0x8a, 0xfc, 0x67, 0x83, 0xda, 0x60, 0xe1, 0xd3, 0xdc, 0x02, 0xe1, 0x8f,
	0x8e, 0xb9, 0x05, 0xb8, 0x96, 0x16, 0x08, 0x87, 0x4c, 0x48, 0x9f, 0x01, 0xed, 0xad, 0x19, 0x67,
	0x40, 0x7b, 0x95, 0x56, 0x34, 0x4d, 0xba, 0x64, 0x20, 0xe4, 0x11, 0x34, 0xd2, 0x08, 0x4b, 0xd4,
	0x91, 0x93, 0x43, 0x53, 0xa3, 0xb7, 0x4d, 0xa3, 0xff, 0x2c, 0xc0, 0xb6, 0xf9, 0xb1, 0xc6, 0xc5,
	0xc8, 0xa5, 0x36, 0x3b, 0x05, 0x4c, 0x63, 0x8a, 0x59, 0x63, 0xfe, 0xd5, 0x48, 0xb8, 0x6b, 0x23,
	0xa1, 0x10, 0xf1, 0x8a, 0xe3, 0xf0, 0x65, 0x24, 0x3a, 0xcc, 0xf2, 0x55, 0x68, 0xbc, 0x44, 0x2b,
	0xf3, 0x12, 0x29, 0x54, 0xc7, 0x72, 0x46, 0xc5, 0x89, 0x55, 0xf8, 0xd1, 0x8f, 0x25, 0x68, 0xe6,
	0x3e, 0x73, 0x48, 0x13, 0xea, 0x6e, 0xef, 0xc4, 0x7f, 0x31, 0xbc, 0x1c, 0x9e, 0x5c, 0x78, 0xf6,
	0x3d, 0xd2, 0x00, 0x40, 0x40, 0xc4, 0x05, 0x62, 0xc3, 0xb6, 0x88, 0x07, 0x67, 0x6e, 0xef, 0x9b,
	0x17, 0x76, 0x91, 0xec, 0xc2, 0x8e, 0x7c, 0x44, 0x42, 0xa5, 0x94, 0xe4, 0x7a, 0x7d, 0x6f, 0xe4,
	0xd9, 0x5b, 0x06, 0x49, 0x42, 0x65, 0x72, 0x00, 0xc4, 0xac, 0x74, 0xd9, 0x1b, 0x9c, 0x7c, 0xeb,
	0xd9, 0x95, 0x35, 0xfc, 0xa2, 0xe7, 0x7a, 0x67, 0x76, 0x95, 0x50, 0x68, 0x65, 0xf0, 0xee, 0xd9,
	0xe9, 0xc8, 0x3b, 0x1d, 0xd9, 0x56, 0xaa, 0xb1, 0xdf, 0xfb, 0xce, 0xb3, 0x6b, 0x69, 0x85, 0xee,
	0xd9, 0x60, 0xe0, 0x9d, 0x8e, 0x04, 0x0e, 0xa4, 0x05, 0xb6, 0xc0, 0x7d, 0xef, 0x79, 0x5f, 0xb2,
	0xeb, 0x5a, 0xda, 0xa5, 0xdb, 0x1b, 0x22, 0xb4, 0x4d, 0xde, 0x81, 0xfd, 0x6c, 0x01, 0x95, 0xda,
	0x21, 0xf7, 0x61, 0xcf, 0xac, 0xa1, 0x12, 0x8d, 0xb4, 0x8c, 0x7c, 0xc6, 0x6e, 0x6a, 0x33, 0x05,
	0xd7, 0xb6, 0x53, 0x60, 0xf8, 0xec, 0xc4, 0xf7, 0xec, 0xdd, 0xe3, 0xdf, 0x8a, 0xb2, 0xaf, 0x86,
	0xe2, 0x07, 0x8c, 0x7c, 0x05, 0x96, 0xfa, 0xa8, 0x25, 0xe9, 0xc7, 0x68, 0xee, 0x9f, 0x53, 0xfb,
	0x60, 0x43, 0x66, 0x11, 0xad, 0x9c, 0x7b, 0xe4, 0x14, 0xc0, 0x1d, 0xf4, 0x55, 0x97, 0xbe, 0xbf,
	0xc6, 0xcb, 0xfe, 0xcf, 0x69, 0xbf, 0x77, 0x33, 0x41, 0xd4, 0xf3, 0xa0, 0xea, 0x0e, 0xfa, 0xf8,
	0x99, 0xfb, 0x60, 0x8d, 0x6b, 0xfc, 0x0f, 0x69, 0xb7, 0x6f, 0xc8, 0x8a, 0x32, 0xcf, 0xf0, 0x58,
	0xe2, 0x13, 0x73, 0x7d, 0x4f, 0xf3, 0x1f, 0x43, 0xfb, 0xdd, 0x9b, 0xd2, 0x58, 0xe9, 0x65, 0x05,
	0xff, 0x57, 0x7e, 0xfe, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x1a, 0xb4, 0x60, 0x6a, 0x0e,
	0x00, 0x00,
}
